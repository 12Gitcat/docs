# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-30 07:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: strophy <leon.white@dash.org>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/dash/teams/37570/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../merchants/technical.rst:1
msgid "Technical guides for merchants using Dash. API and SDK resources."
msgstr ""

#: ../../merchants/technical.rst:1
msgid ""
"dash, merchants, payment processor, API, SDK, insight, blockcypher, gocoin, "
"instantsend, vending machines"
msgstr ""

#: ../../merchants/technical.rst:9
msgid "Technical Guides"
msgstr ""

#: ../../merchants/technical.rst:12
msgid "Dash Wallet Integration"
msgstr ""

#: ../../merchants/technical.rst:14
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-Wallet-Integration.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:18
msgid ""
"`Dash Core <https://github.com/dashpay/dash/releases>`__ is a fork of "
"Bitcoin and the majority of functionality included in the Dash Core Daemon "
"can be integrated in a similar manner. Key differences relate to "
"customizations to existing JSON-RPC commands to support unique "
"functionalities such as InstantSend. These differences, as well as more "
"general information, are summarized below."
msgstr ""

#: ../../merchants/technical.rst:25
msgid ""
"**General Information:** Dash is a “Proof of Work” blockchain with "
"attributes similar to that of Bitcoin."
msgstr ""

#: ../../merchants/technical.rst:28
msgid "Block Time: ~2.6 Minutes per Block"
msgstr ""

#: ../../merchants/technical.rst:29
msgid ""
"Blockchain Confirmations: 6 Confirmations (or 1 in the case of InstantSend)"
msgstr ""

#: ../../merchants/technical.rst:31
msgid "Github Source: https://github.com/dashpay/dash"
msgstr ""

#: ../../merchants/technical.rst:32
msgid "Release Link: https://github.com/dashpay/dash/releases"
msgstr ""

#: ../../merchants/technical.rst:34
msgid ""
"**JSON-RPC Interface:** The majority of Bitcoin JSON-RPC commands are "
"unchanged making integration into existing systems relatively "
"straightforward. For a complete listing of RPC commands see the `Developer "
"Guide <https://dash-docs.github.io/en/developer-guide>`__."
msgstr ""

#: ../../merchants/technical.rst:39
msgid ""
"It’s worth noting that several key Transaction-related JSON-RPC commands "
"have been modified to support InstantSend through the addition of an "
"“InstantLock” field and are listed below:"
msgstr ""

#: ../../merchants/technical.rst:43
msgid ""
"`GetTransaction <https://dash-docs.github.io/en/developer-"
"reference#gettransaction>`__"
msgstr ""

#: ../../merchants/technical.rst:44
msgid ""
"`ListTransactions <https://dash-docs.github.io/en/developer-"
"reference#listtransactions>`__"
msgstr ""

#: ../../merchants/technical.rst:45
msgid ""
"`ListSinceBlock <https://dash-docs.github.io/en/developer-"
"reference#listsinceblock>`__"
msgstr ""

#: ../../merchants/technical.rst:47
msgid ""
"**Block Hashing Algorithm:** Dash uses the “X11” algorithm in place of "
"SHA256 used in Bitcoin. It’s important to note, however, that this only "
"affects the hashing of the Block itself. All other internals utilize SHA256 "
"hashes (transactions, merkle root, etc) which allows for most existing "
"libraries to work in the Dash ecosystem."
msgstr ""

#: ../../merchants/technical.rst:53
msgid ""
"**Supporting Libraries:** Due to the aforementioned differences in Hashing "
"Algorithm only minor adjustments are required before using Bitcoin libraries"
" on the Dash network. The most popular libraries have already been ported to"
" Dash which has enabled support for most major programming languages. These "
"resources are outlined in the :ref:`SDK Resources <sdk-resources>` section "
"of this document."
msgstr ""

#: ../../merchants/technical.rst:64
msgid "API Services"
msgstr ""

#: ../../merchants/technical.rst:66
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-API.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:70
msgid ""
"Several API services exist to facilitate quick and easy integration with the"
" Dash network for services including:"
msgstr ""

#: ../../merchants/technical.rst:73
msgid "Transaction broadcasting"
msgstr ""

#: ../../merchants/technical.rst:74
msgid "Exchange rates"
msgstr ""

#: ../../merchants/technical.rst:75
msgid "Currency conversion"
msgstr ""

#: ../../merchants/technical.rst:76
msgid "Invoice generation"
msgstr ""

#: ../../merchants/technical.rst:78
msgid ""
"API Services are typically leveraged to eliminate that requirement of "
"running your own infrastructure to support blockchain interactions. This "
"includes mechanisms such as:"
msgstr ""

#: ../../merchants/technical.rst:82
msgid "Forming and Broadcasting a Transaction to the network."
msgstr ""

#: ../../merchants/technical.rst:83
msgid "Address generation using HD Wallets."
msgstr ""

#: ../../merchants/technical.rst:84
msgid "Payment Processing using WebHooks."
msgstr ""

#: ../../merchants/technical.rst:86
msgid ""
"There are a variety of options for supporting these methods, with the key "
"differentiator being the pricing model included and supported features. The "
"following list of API Providers attempts to outline these key "
"features/differentiators and also includes a link to related documentation."
msgstr ""

#: ../../merchants/technical.rst:94
msgid "Insight"
msgstr ""

#: ../../merchants/technical.rst:101
msgid "https://github.com/dashevo/insight-api"
msgstr ""

#: ../../merchants/technical.rst:103
msgid ""
"The open-source Insight REST API provides you with a convenient, powerful "
"and simple way to read data from the Dash network and build your own "
"services with it."
msgstr ""

#: ../../merchants/technical.rst:107
msgid "Features: Transaction Broadcast, WebSocket Notifications."
msgstr ""

#: ../../merchants/technical.rst:108
msgid "Pricing Model: Free / Open Source"
msgstr ""

#: ../../merchants/technical.rst:109
msgid "Documentation: https://github.com/dashevo/insight-api"
msgstr ""

#: ../../merchants/technical.rst:113 ../../merchants/technical.rst:324
msgid "BlockCypher"
msgstr ""

#: ../../merchants/technical.rst:120 ../../merchants/technical.rst:331
msgid "https://www.blockcypher.com"
msgstr ""

#: ../../merchants/technical.rst:122
msgid ""
"BlockCypher is a simple, mostly RESTful JSON API for interacting with "
"blockchains, accessed over HTTP or HTTPS from the api.blockcypher.com "
"domain."
msgstr ""

#: ../../merchants/technical.rst:126
msgid ""
"Features: Transaction Broadcast, HD Wallet / Address Generation, WebSocket "
"and WebHook Callbacks as well as Payment Forwarding. BlockCypher does not "
"handle Private Keys."
msgstr ""

#: ../../merchants/technical.rst:129
msgid ""
"Pricing Model: Per API Call, 5000 Requests -> $85.00 per month "
"(https://accounts.blockcypher.com/plans)"
msgstr ""

#: ../../merchants/technical.rst:131
msgid "Documentation: https://www.blockcypher.com/dev/dash/"
msgstr ""

#: ../../merchants/technical.rst:135
msgid "ChainRider"
msgstr ""

#: ../../merchants/technical.rst:142
msgid "https://www.chainrider.io"
msgstr ""

#: ../../merchants/technical.rst:144
msgid ""
"ChainRider is a cloud service providing a set of REST APIs for digital "
"currency management and exploration."
msgstr ""

#: ../../merchants/technical.rst:147
msgid ""
"Features: Blockchain queries, Event Notifications, Transaction Broadcast, "
"Payment Processing, etc."
msgstr ""

#: ../../merchants/technical.rst:149
msgid "Pricing Model: Free trial, pay per API call"
msgstr ""

#: ../../merchants/technical.rst:150
msgid "Documentation: https://www.chainrider.io/docs/dash"
msgstr ""

#: ../../merchants/technical.rst:154 ../../merchants/technical.rst:339
msgid "GoCoin"
msgstr ""

#: ../../merchants/technical.rst:161 ../../merchants/technical.rst:346
msgid "https://gocoin.com"
msgstr ""

#: ../../merchants/technical.rst:163
msgid ""
"The GoCoin platform makes taking Dash as easy as installing a plugin. "
"Payment processing is already implemented for every major shopping platform."
" GoCoin is focused on helping merchants in privacy-related niches and "
"specific industries, and handles all transaction risk for all payments from "
"your customers."
msgstr ""

#: ../../merchants/technical.rst:169
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. GoCoin holds Private"
" Keys on their server allowing the merchant to withdraw funds in "
"Cryptocurrency or convert to Fiat."
msgstr ""

#: ../../merchants/technical.rst:172
msgid ""
"Integrations: WooCommerce, Magento, Prestashop, VirtueMart, ZenCart, "
"OpenCart, OSCommerce, UberCart, nopCommerce, WHMCS, NATS4, Shopify."
msgstr ""

#: ../../merchants/technical.rst:174
msgid "Pricing Model: 1% Processing Fee (https://gocoin.com/fees)"
msgstr ""

#: ../../merchants/technical.rst:175
msgid "Documentation: https://gocoin.com/docs"
msgstr ""

#: ../../merchants/technical.rst:179
msgid "CoinPayments"
msgstr ""

#: ../../merchants/technical.rst:186
msgid "https://www.coinpayments.net"
msgstr ""

#: ../../merchants/technical.rst:188
msgid ""
"CoinPayments is an integrated payment gateway for cryptocurrencies such as "
"Dash. Shopping cart plugins are available for all popular webcarts used "
"today. CoinPayments can help you set up a new checkout, or integrate with "
"your pre-existing checkout."
msgstr ""

#: ../../merchants/technical.rst:193
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. CoinPayments holds "
"Private Keys on their server allowing merchant to withdraw funds in "
"Cryptocurrency or convert to Fiat."
msgstr ""

#: ../../merchants/technical.rst:196
msgid ""
"Integrations: aMember Pro, Arastta, Blesta, BoxBilling, Drupal, Ecwid, "
"Hikashop, Magento, OpenCart, OSCommerce, PrestaShop, Tomato Cart, "
"WooCommerce, Ubercart, XCart, ZenCart"
msgstr ""

#: ../../merchants/technical.rst:199
msgid ""
"Pricing Model: 0.5% Processing Fee (https://www.coinpayments.net/help-fees)"
msgstr ""

#: ../../merchants/technical.rst:201
msgid "Documentation: https://www.coinpayments.net/apidoc"
msgstr ""

#: ../../merchants/technical.rst:207
msgid "SDK Resources"
msgstr ""

#: ../../merchants/technical.rst:209
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-SDK.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:213
msgid ""
"SDKs (Software Development Kits) are used to accelerate the design and "
"development of a product for the Dash Network. These resources can either be"
" used to interface with an API provider or for the creation of standalone "
"applications by forming transactions and/or performing various wallet "
"services."
msgstr ""

#: ../../merchants/technical.rst:221
msgid "Dash Developer Guide"
msgstr ""

#: ../../merchants/technical.rst:228
msgid "https://dash-docs.github.io/en/developer-guide"
msgstr ""

#: ../../merchants/technical.rst:230
msgid ""
"The Dash Developer Guide aims to provide the information you need to "
"understand Dash and start building Dash-based applications. To make the best"
" use of this documentation, you may want to install the current version of "
"Dash Core, either from source or from a pre-compiled executable."
msgstr ""

#: ../../merchants/technical.rst:236
msgid "Documentation: https://dash-docs.github.io/en/developer-guide"
msgstr ""

#: ../../merchants/technical.rst:239
msgid "NodeJS/JavaScript: Bitcore (Dashcore)"
msgstr ""

#: ../../merchants/technical.rst:246
msgid "https://bitcore.io"
msgstr ""

#: ../../merchants/technical.rst:248
msgid ""
"Dashcore is a fork of Bitcore and operates as a full Dash node — your apps "
"run directly on the peer-to-peer network. For wallet application "
"development, additional indexes have been added into Dash for querying "
"address balances, transaction history, and unspent outputs."
msgstr ""

#: ../../merchants/technical.rst:253
msgid "Platform: NodeJS / Javascript"
msgstr ""

#: ../../merchants/technical.rst:254
msgid "Documentation: https://bitcore.io/api/lib"
msgstr ""

#: ../../merchants/technical.rst:255
msgid "Repository lib: https://github.com/dashevo/dashcore-lib"
msgstr ""

#: ../../merchants/technical.rst:256
msgid "Repository node: https://github.com/dashevo/dashcore-node"
msgstr ""

#: ../../merchants/technical.rst:259
msgid "PHP: Bitcoin-PHP"
msgstr ""

#: ../../merchants/technical.rst:261
msgid "https://github.com/Bit-Wasp/bitcoin-php"
msgstr ""

#: ../../merchants/technical.rst:263
msgid ""
"Bitcoin-PHP is an implementation of Bitcoin with support for Dash using "
"mostly pure PHP."
msgstr ""

#: ../../merchants/technical.rst:266
msgid "Platform: PHP"
msgstr ""

#: ../../merchants/technical.rst:267
msgid ""
"Documentation: https://github.com/Bit-Wasp/bitcoin-"
"php/blob/master/doc/Introduction.md"
msgstr ""

#: ../../merchants/technical.rst:268
msgid "Repository: https://github.com/Bit-Wasp/bitcoin-php"
msgstr ""

#: ../../merchants/technical.rst:271
msgid "Python: PyCoin"
msgstr ""

#: ../../merchants/technical.rst:273
msgid "https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../merchants/technical.rst:275
msgid ""
"PyCoin is an implementation of a bunch of utility routines that may be "
"useful when dealing with Bitcoin and Dash. It has been tested with Python "
"2.7, 3.6 and 3.7."
msgstr ""

#: ../../merchants/technical.rst:279
msgid "Platform: Python"
msgstr ""

#: ../../merchants/technical.rst:280
msgid "Documentation: https://pycoin.readthedocs.io/en/latest/"
msgstr ""

#: ../../merchants/technical.rst:281
msgid "Repository: https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../merchants/technical.rst:284
msgid "Java: DashJ"
msgstr ""

#: ../../merchants/technical.rst:291
msgid "https://github.com/HashEngineering/dashj"
msgstr ""

#: ../../merchants/technical.rst:293
msgid ""
"DashJ is a library for working with the Dash protocol. It can maintain a "
"wallet, send/receive transactions (including InstantSend) without needing a "
"local copy of Dash Core, and has many other advanced features. It's "
"implemented in Java but can be used from any JVM compatible language: "
"examples in Python and JavaScript are included."
msgstr ""

#: ../../merchants/technical.rst:299
msgid "Platform: Java"
msgstr ""

#: ../../merchants/technical.rst:300
msgid "Documentation: https://bitcoinj.github.io/getting-started"
msgstr ""

#: ../../merchants/technical.rst:301
msgid "Example application: https://github.com/tomasz-ludek/pocket-of-dash"
msgstr ""

#: ../../merchants/technical.rst:304
msgid ".NET: NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:311
msgid "https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:313
msgid ""
"NBitcoin is the most complete Bitcoin library for the .NET platform, and has"
" been patched to include support for Dash. It implements all most relevant "
"Bitcoin Improvement Proposals (BIPs) and Dash Improvement Proposals (DIPs). "
"It also provides low level access to Dash primitives so you can easily build"
" your application on top of it."
msgstr ""

#: ../../merchants/technical.rst:319
msgid "Platform: .NET"
msgstr ""

#: ../../merchants/technical.rst:320
msgid ""
"Documentation: "
"https://programmingblockchain.gitbooks.io/programmingblockchain/content/"
msgstr ""

#: ../../merchants/technical.rst:321
msgid "Repository: https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:333
msgid "BlockCypher also offers client SDKs."
msgstr ""

#: ../../merchants/technical.rst:335
msgid "Platform: Ruby, Python, Java, PHP, Go, NodeJS"
msgstr ""

#: ../../merchants/technical.rst:336
msgid ""
"Repositories: https://www.blockcypher.com/dev/dash/#blockcypher-supported-"
"language-sdks"
msgstr ""

#: ../../merchants/technical.rst:348
msgid "Platform: JavaScript, PHP, Java, Ruby, .NET, Python"
msgstr ""

#: ../../merchants/technical.rst:349
msgid "Repositories: https://gocoin.com/docs"
msgstr ""

#: ../../merchants/technical.rst:353
msgid "InstantSend"
msgstr "インスタントセンド"

#: ../../merchants/technical.rst:355
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-InstantSend.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:359
msgid ""
"InstantSend is a feature provided by the Dash network that allows for "
"0-confirmation transactions to be safely accepted by Merchants and other "
"service providers. Secured by the Masternode Network, this mechanism "
"eliminates the risk of a “Double Spend” by locking transaction inputs for a "
"given transaction at a protocol level."
msgstr ""

#: ../../merchants/technical.rst:367
msgid "InstantSend Transactions vs. Standard Transactions"
msgstr ""

#: ../../merchants/technical.rst:369
msgid ""
"From an integration perspective there are only minor differences between an "
"InstantSend Transaction and a Standard Transaction. Both transaction types "
"are formed in the same way and are signed using the same process; the key "
"difference is the fee structure and input requirements for InstantSend."
msgstr ""

#: ../../merchants/technical.rst:375
msgid ""
"Fee Structure: InstantSend utilizes a “per-input” fee of 0.0001 DASH per "
"Input."
msgstr ""

#: ../../merchants/technical.rst:377
msgid ""
"Input Requirements: All inputs for an InstantSend transaction must have at "
"least 6 confirmations."
msgstr ""

#: ../../merchants/technical.rst:380
msgid ""
"In the event that a given transaction does not meet both criteria it will "
"revert to a standard transaction."
msgstr ""

#: ../../merchants/technical.rst:384
msgid "Receiving InstantSend Transactions"
msgstr ""

#: ../../merchants/technical.rst:386
msgid ""
"InstantSend transactions are handled in the same way as a Standard "
"Transaction, typically through JSON-RPC, Insight API, or an internal "
"notification script / service that is configured at a server level."
msgstr ""

#: ../../merchants/technical.rst:390
msgid ""
"JSON-RPC: The following RPC commands will include InstantSend-related "
"information. Within the response you’ll find an “InstantLock” field the "
"status of a given Transaction. This true/false (boolean) value will indicate"
" whether an InstantSend has been observed."
msgstr ""

#: ../../merchants/technical.rst:395
msgid ""
"GetTransaction: https://dash-docs.github.io/en/developer-"
"reference#gettransaction"
msgstr ""

#: ../../merchants/technical.rst:396
msgid ""
"ListTransactions: https://dash-docs.github.io/en/developer-"
"reference#listtransactions"
msgstr ""

#: ../../merchants/technical.rst:397
msgid ""
"ListSinceBlock: https://dash-docs.github.io/en/developer-"
"reference#listsinceblock"
msgstr ""

#: ../../merchants/technical.rst:399
msgid ""
"Insight API: Insight API can be used to detect InstantSend transactions and "
"to push notifications to clients using WebSockets. The API can also be "
"manually polled to retrieve Transaction information including InstantSend "
"status."
msgstr ""

#: ../../merchants/technical.rst:404
msgid "Web Socket: https://github.com/dashpay/insight-api-dash#web-socket-api"
msgstr ""

#: ../../merchants/technical.rst:405
msgid ""
"Transaction API: https://github.com/dashpay/insight-api-dash#instantsend-"
"transactions"
msgstr ""

#: ../../merchants/technical.rst:407
msgid ""
"Script Notify: The Dash Core Daemon can be configured to execute an external"
" script whenever an InstantSend transaction relating to that wallet is "
"observed. This is configured by adding the following line to the dash.conf "
"file:"
msgstr ""

#: ../../merchants/technical.rst:412
msgid "``instantsendnotify=/path/to/concurrent/safe/handler %s``"
msgstr ""

#: ../../merchants/technical.rst:414
msgid ""
"*Note that only addresses imported to the wallet will be monitored for "
"InstantSend Transactions.*"
msgstr ""

#: ../../merchants/technical.rst:418
msgid "Broadcasting InstantSend Transactions"
msgstr ""

#: ../../merchants/technical.rst:420
msgid ""
"InstantSend Transactions can be constructed and broadcast using an approach "
"similar to Standard Transactions. Provided the InstantSend Fee Structure and"
" Input Requirements are met, an InstantSend can be broadcast using JSON-RPC "
"or Insight API as a Raw Transaction."
msgstr ""

#: ../../merchants/technical.rst:425
msgid ""
"JSON-RPC: The “SendRawTransaction” RPC command can be utilized to broadcast "
"a raw transaction using InstantSend. When utilizing this command be sure to "
"set both optional parameters as “true”"
msgstr ""

#: ../../merchants/technical.rst:429
msgid ""
"``sendrawtransaction \"hexstring\" ( allowhighfees instantsend )`` "
"``sendrawtransaction \"hexstring\" true true``"
msgstr ""

#: ../../merchants/technical.rst:432
msgid ""
"More Information: https://dash-docs.github.io/en/developer-"
"reference#sendrawtransaction"
msgstr ""

#: ../../merchants/technical.rst:434
msgid ""
"Insight API: Raw Transactions can also be broadcast as an InstantSend using "
"Insight API. In this case all that is required is to POST the raw "
"transaction using the ``/tx/sendix`` route."
msgstr ""

#: ../../merchants/technical.rst:438
msgid ""
"More Information: https://github.com/dashevo/insight-api#instantsend-"
"transaction"
msgstr ""

#: ../../merchants/technical.rst:441
msgid "Additional Resources"
msgstr ""

#: ../../merchants/technical.rst:443
msgid ""
"The following resources provide additional information about InstantSend and"
" are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""

#: ../../merchants/technical.rst:447
msgid ""
"`InstantSend Whitepaper "
"<https://dashpay.atlassian.net/wiki/download/attachments/75530298/Dash%20Whitepaper%20-%20InstantTX.pdf>`_"
msgstr ""

#: ../../merchants/technical.rst:448
msgid ""
"`How Dash InstantSend Protect Merchants from Double Spends "
"<https://www.youtube.com/watch?v=HJx82On8jig>`_"
msgstr ""

#: ../../merchants/technical.rst:449
msgid ""
"`InstantSend Presentation from the Dash Conference London 2017 "
"<https://www.youtube.com/watch?v=n4PELomRiFY>`_"
msgstr ""

#: ../../merchants/technical.rst:453
msgid "Vending Machines"
msgstr ""

#: ../../merchants/technical.rst:455
msgid ""
"Community member moocowmoo has released code to help merchants build their "
"own vending machine and set it up to receive Dash InstantSend payments. The "
"Dashvend software can also be used to create any sort of payment system, "
"including point-of-sale systems, that can accept InstantSend payments."
msgstr ""

#: ../../merchants/technical.rst:461
msgid "`Open Source Code <https://github.com/moocowmoo/dashvend>`_"
msgstr ""

#: ../../merchants/technical.rst:462
msgid "`Demonstration website <http://code.dashndrink.com>`_"
msgstr ""

#: ../../merchants/technical.rst:463
msgid "`Demonstration video <https://www.youtube.com/watch?v=SX-3kwbam0o>`_"
msgstr ""

#: ../../merchants/technical.rst:467
msgid "Price Tickers"
msgstr ""

#: ../../merchants/technical.rst:469
msgid ""
"You can add a simple price ticket widget to your website using the simple "
"`code snippet generator from CoinGecko "
"<https://www.coingecko.com/en/widgets/ticker/dash/usd>`_."
msgstr ""

#: ../../merchants/technical.rst:479
msgid ""
"Similar widgets with different designs are available from `CoinLib "
"<https://coinlib.io/widgets>`_, `WorldCoinIndex "
"<https://www.worldcoinindex.com/Widget>`_ and `Cryptonator "
"<https://www.cryptonator.com/widget>`_, while an API providing similar "
"information is available from `DashCentral "
"<https://www.dashcentral.org/about/api>`_."
msgstr ""

#: ../../merchants/technical.rst:487
msgid "QR Codes"
msgstr ""

#: ../../merchants/technical.rst:489
msgid ""
"Many wallets are capable of generating QR codes which can be scanned to "
"simplify entry of the Dash address. Printing these codes or posting the on "
"your website makes it easy to receive payment and tips in Dash, both online "
"and offline."
msgstr ""

#: ../../merchants/technical.rst:494
msgid ""
"In Dash Core, go to the **Receive** tab, generate an address if necessary, "
"and double-click it to display a QR code. Right click on the QR code and "
"select **Save Image** to save a PNG file."
msgstr ""

#: ../../merchants/technical.rst:497
msgid ""
"In Dash for Android, tap **Request Coins** and then tap the QR code to "
"display a larger image. You can screenshot this to save an image."
msgstr ""

#: ../../merchants/technical.rst:499
msgid ""
"In Dash for iOS, swipe to the left to display the **Receive Dash** screen. A"
" QR code and address will appear. You can screenshot this to save an image."
msgstr ""

#: ../../merchants/technical.rst:502
msgid ""
"To generate a QR code from any Dash address, visit `CWA QR Code Generator "
"<https://cwaqrgen.com/dash>`_ and simply paste your Dash address to generate"
" an image."
msgstr ""
