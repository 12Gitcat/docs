# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-07-18 08:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ivan SIerraalta <ivansierraalta@gmail.com>, 2018\n"
"Language-Team: Spanish (https://www.transifex.com/dash/teams/37570/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../developers/compiling.rst:5
msgid "Compiling Dash Core"
msgstr "Compilar Dash Core"

#: ../../developers/compiling.rst:7
msgid ""
"While Dash offers stable binary builds on the `website "
"<https://www.dash.org/wallets>`_, on `GitHub "
"<https://github.com/dashpay/dash/releases>`_ and through development builds "
"using `Bamboo <https://bamboo.dash.org>`_, many users will also be "
"interested in building Dash binaries for themselves. The following guides "
"are available:"
msgstr ""
"Mientras que Dash ofrece compilaciones binarias estables en el `Sitio web "
"<https://www.dash.org/wallets>`_, en `GitHub "
"<https://github.com/dashpay/dash/releases>`_ y a través de construcciones de"
" desarrollo utilizando `Bamboo <https://bamboo.dash.org>`_, muchos usuarios "
"también estarán interesados en crear binarios de Dash para ellos mismos. Las"
" siguientes guías están disponibles:"

#: ../../developers/compiling.rst:14
msgid "Eclipse (coming soon)"
msgstr "Eclipse (próximamente)"

#: ../../developers/compiling.rst:15
msgid ":ref:`Building on Linux <linux-build>`"
msgstr ":ref:`Construir en Linux <linux-build>`"

#: ../../developers/compiling.rst:16
msgid ":ref:`Gitian deterministic builds <gitian-build>`"
msgstr ":ref:`Gitian construcciones determinísticas <gitian-build>`"

#: ../../developers/compiling.rst:21
msgid "Linux"
msgstr "Linux"

#: ../../developers/compiling.rst:23
msgid ""
"This guide describes how to build Dash Core wallet without the GUI from "
"source under Ubuntu Linux. It is intended to serve as a simple guide for "
"general compilation of non-deterministic binary files from the stable source"
" code. A standard installation of Ubuntu Linux 16.04 LTS will be used as an "
"environment for the build. We assume you are running as a user with sudo "
"permissions. First add the necessary extra repository and update all "
"packages::"
msgstr ""
"Esta guía describe cómo crear la billetera Dash Core sin la GUI de la fuente"
" en Ubuntu Linux. Su objetivo es servir como una guía simple para la "
"compilación general de archivos binarios no deterministas a partir del "
"código fuente estable. Se usará una instalación estándar de Ubuntu Linux "
"16.04 LTS como entorno para la compilación. Suponemos que estás ejecutando "
"como usuario con permisos sudo. Primero agrega el repositorio adicional "
"necesario y actualiza todos los paquetes::"

#: ../../developers/compiling.rst:35
msgid ""
"Now install the dependencies as described in the installation "
"documentation::"
msgstr ""
"Ahora instala las dependencias como se describe en la documentación de "
"instalación::"

#: ../../developers/compiling.rst:41
msgid ""
"Optionally install the Qt dependencies if you want to build the Dash GUI::"
msgstr ""
"De manera opcional, instala las dependencias de Qt si deseas compilar la GUI"
" de Dash::"

#: ../../developers/compiling.rst:46
msgid "Download the stable Dash repository::"
msgstr "Descarga el repositorio estable de Dash::"

#: ../../developers/compiling.rst:50
msgid "And build::"
msgstr "Y construye::"

#: ../../developers/compiling.rst:58
msgid "``/usr/local/bin`` now contains the compiled Dash binaries."
msgstr "``/usr/local/bin`` ahora contiene los binarios compilados de Dash."

#: ../../developers/compiling.rst:63
msgid "Gitian"
msgstr "Gitian"

#: ../../developers/compiling.rst:65
msgid ""
"Gitian is the deterministic build process that is used to build the Dash "
"Core executables. It provides a way to be reasonably sure that the "
"executables are really built from the source on GitHub. It also makes sure "
"that the same, tested dependencies are used and statically built into the "
"executable. Multiple developers build the source code by following a "
"specific descriptor (\"recipe\"), cryptographically sign the result, and "
"upload the resulting signature. These results are compared and only if they "
"match, the build is accepted and uploaded to dash.org."
msgstr ""
"Gitian es el proceso de compilación determinista que se utiliza para "
"compilar los ejecutables de Dash Core. Proporciona una forma de estar "
"razonablemente seguro de que los ejecutables están realmente construidos "
"desde la fuente en GitHub. También se asegura de que se usen las mismas "
"dependencias probadas y estén integradas estáticamente en el ejecutable. "
"Múltiples desarrolladores crean el código fuente siguiendo un descriptor "
"específico (\"receta\"), firman criptográficamente el resultado y cargan la "
"firma resultante. Estos resultados se comparan y solo si coinciden, la "
"compilación es aceptada y cargada en dash.org."

#: ../../developers/compiling.rst:74
msgid ""
"More independent Gitian builders are needed, which is why this guide exists."
" It is preferred you follow these steps yourself instead of using someone "
"else's VM image to avoid 'contaminating' the build."
msgstr ""
"Se necesitan constructores de Gitian más independientes, razón por la cual "
"existe esta guía. Es preferible que sigas estos pasos tu mismo en lugar de "
"usar la imagen de VM de otra persona para evitar 'contaminar' la "
"compilación."

#: ../../developers/compiling.rst:79
msgid "Setup the host environment"
msgstr "Configurar el entorno de alojamiento"

#: ../../developers/compiling.rst:81
msgid ""
"Gitian builds are known to be working on Debian 8.x. If your machine is "
"already running this system, you can perform Gitian builds on the actual "
"hardware. Alternatively, you can install it in a virtual machine. Follow the"
" guide for :ref:`setting up a VPS for masternodes <vps-setup>`, selecting a "
"Debian 8.x image during the installation process and naming your non-root "
"user ``gitianuser``. Selecting a VPS with two processors will also greatly "
"speed up the build process. If you cannot login to your VPS over SSH as "
"root, access the terminal and issue the following command::"
msgstr ""
"Se sabe que las versiones de Gitian están trabajando en Debian 8.x. Si tu "
"máquina ya está ejecutando este sistema, puedes realizar compilaciones de "
"Gitian en el hardware actual. Alternativamente, puedes instalarlo en una "
"máquina virtual. Siguiendo la guía para :ref:`configurar un VPS para "
"masternodes <vps-setup>`, seleccionando una imagen de Debian 8.x durante el "
"proceso de instalación y nombrando a tu usuario non-root ``gitianuser``. "
"Seleccionar un VPS con dos procesadores también acelerará en gran medida el "
"proceso de compilación. Si no puedes iniciar sesión en tu VPS a través de "
"SSH como root, accede al terminal y emite el siguiente comando::"

#: ../../developers/compiling.rst:94
msgid ""
"Log in to your new environment by SSH as root. Set up the dependencies first"
" by pasting the following in the terminal::"
msgstr ""
"Inicia sesión en su tuevo entorno mediante SSH como raíz. Configura las "
"dependencias primero pegando lo siguiente en el terminal::"

#: ../../developers/compiling.rst:100
msgid ""
"Then set up LXC and the rest with the following, which is a complex jumble "
"of settings and workarounds::"
msgstr ""
"Luego configura LXC y el resto con lo siguiente, que es una mezcla compleja "
"de configuraciones y soluciones::"

#: ../../developers/compiling.rst:121
msgid ""
"At the end Debian is rebooted to make sure that the changes take effect. Re-"
"login as the user gitianuser that was created during installation. The rest "
"of the steps in this guide will be performed as that user."
msgstr ""
"Al final, Debian se reinicia para garantizar que los cambios entren en "
"vigencia. Vuelve a iniciar sesión como el usuario gitianuser que se creó "
"durante la instalación. El resto de los pasos en esta guía se realizarán "
"como ese usuario."

#: ../../developers/compiling.rst:125
msgid ""
"There is no ``python-vm-builder`` package in Debian, so we need to install "
"it from source ourselves::"
msgstr ""
"No existe el paquete ``python-vm-builder`` en Debian, por lo que debemos "
"instalarlo desde la fuente nosotros mismos::"

#: ../../developers/compiling.rst:137
msgid "Set up the environment and compile"
msgstr "Configurar el entorno y compilar"

#: ../../developers/compiling.rst:139
msgid "Clone the Dash Core repository to your home directory::"
msgstr "Clona el repositorio de Dash Core en tu directorio personal::"

#: ../../developers/compiling.rst:143
msgid "Then create the script file::"
msgstr "Luego crea el archivo de script::"

#: ../../developers/compiling.rst:147
msgid ""
"And paste the following script in place (this will be automatic if/when the "
"script is pulled into Dash Core)::"
msgstr ""
"Y pega el siguiente script en su lugar (esto será automático si/cuando el "
"script se inserta en Dash Core)::"

#: ../../developers/compiling.rst:152
msgid "Save the file and set it executable::"
msgstr "Guarda el archivo y configúralo como ejecutable::"

#: ../../developers/compiling.rst:156
msgid ""
"Set up the environment, replacing the name and version with your name and "
"target version::"
msgstr ""
"Configurar el entorno, reemplazando el nombre y la versión con tu nombre y "
"versión de destino::"

#: ../../developers/compiling.rst:161
msgid "Run the compilation script::"
msgstr "Ejecuta el script de compilación::"

#: ../../developers/compiling.rst:165
msgid ""
"Your system will build all dependencies and Dash Core from scratch for "
"Windows and Linux platforms (macOS if the dependencies were installed "
"according to `these instructions "
"<https://github.com/dashpay/dash/blob/master/doc/build-osx.md>`_). This can "
"take some time. When complete, you will see the SHA256 checksums, which you "
"can compare against the hashes available on the `Dash website "
"<https://www.dash.org/wallets>`_. In this way, you can be sure that you are "
"running original and untampered builds of the code as it exists on GitHub."
msgstr ""
"Tu sistema creará todas las dependencias y el Dash Core desde cero para "
"plataformas Windows y Linux (macOS si las dependencias se instalaron de "
"acuerdo con `estas instrucciones "
"<https://github.com/dashpay/dash/blob/master/doc/build-osx.md>`_). Esto "
"puede llevar algo de tiempo. Cuando se complete, verás las sumas de "
"comprobación SHA256, con las que puedes comparar con los valores disponibles"
" en el `Sitio web de Dash <https://www.dash.org/wallets>`_. De esta manera, "
"puedes estar seguro de que estás ejecutando compilaciones originales y sin "
"moderar del código tal como existe en GitHub."
