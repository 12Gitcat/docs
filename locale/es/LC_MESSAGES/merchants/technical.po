# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-25 08:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Damian Walker <damianwalkerstrauss@gmail.com>, 2018\n"
"Language-Team: Spanish (https://www.transifex.com/dash/teams/37570/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../merchants/technical.rst:5
msgid "Technical Guides"
msgstr ""

#: ../../merchants/technical.rst:7
msgid ""
"Several API services exist to facilitate quick and easy integration with the"
" Dash network for services including:"
msgstr ""

#: ../../merchants/technical.rst:10
msgid "Transaction broadcasting"
msgstr ""

#: ../../merchants/technical.rst:11
msgid "Exchange rates"
msgstr ""

#: ../../merchants/technical.rst:12
msgid "Currency conversion"
msgstr ""

#: ../../merchants/technical.rst:13
msgid "Invoice generation"
msgstr ""

#: ../../merchants/technical.rst:16
msgid "API Services"
msgstr ""

#: ../../merchants/technical.rst:18
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-API.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:22
msgid ""
"API Services are typically leveraged to eliminate that requirement of "
"running your own infrastructure to support blockchain interactions. This "
"includes mechanisms such as:"
msgstr ""

#: ../../merchants/technical.rst:26
msgid "Forming and Broadcasting a Transaction to the network."
msgstr ""

#: ../../merchants/technical.rst:27
msgid "Address generation using HD Wallets."
msgstr ""

#: ../../merchants/technical.rst:28
msgid "Payment Processing using WebHooks."
msgstr ""

#: ../../merchants/technical.rst:30
msgid ""
"There are a variety of options for supporting these methods, with the key "
"differentiator being the pricing model included and supported features. The "
"following list of API Providers attempts to outline these key "
"features/differentiators and also includes a link to related documentation."
msgstr ""

#: ../../merchants/technical.rst:38
msgid "Insight"
msgstr ""

#: ../../merchants/technical.rst:45
msgid "https://github.com/dashevo/insight-api"
msgstr ""

#: ../../merchants/technical.rst:47
msgid ""
"The open-source Insight REST API provides you with a convenient, powerful "
"and simple way to read data from the Dash network and build your own "
"services with it."
msgstr ""

#: ../../merchants/technical.rst:51
msgid "Features: Transaction Broadcast, WebSocket Notifications."
msgstr ""

#: ../../merchants/technical.rst:52
msgid "Pricing Model: Free / Open Source"
msgstr ""

#: ../../merchants/technical.rst:53
msgid "Documentation: https://github.com/dashevo/insight-api"
msgstr ""

#: ../../merchants/technical.rst:57 ../../merchants/technical.rst:223
msgid "BlockCypher"
msgstr ""

#: ../../merchants/technical.rst:64 ../../merchants/technical.rst:230
msgid "https://www.blockcypher.com"
msgstr ""

#: ../../merchants/technical.rst:66
msgid ""
"BlockCypher is a simple, mostly RESTful JSON API for interacting with "
"blockchains, accessed over HTTP or HTTPS from the api.blockcypher.com "
"domain."
msgstr ""

#: ../../merchants/technical.rst:70
msgid ""
"Features: Transaction Broadcast, HD Wallet / Address Generation, WebSocket "
"and WebHook Callbacks as well as Payment Forwarding. BlockCypher does not "
"handle Private Keys."
msgstr ""

#: ../../merchants/technical.rst:73
msgid ""
"Pricing Model: Per API Call, 5000 Requests -> $85.00 per month "
"(https://accounts.blockcypher.com/plans)"
msgstr ""

#: ../../merchants/technical.rst:75
msgid "Documentation: https://www.blockcypher.com/dev/dash/"
msgstr ""

#: ../../merchants/technical.rst:79 ../../merchants/technical.rst:239
msgid "GoCoin"
msgstr ""

#: ../../merchants/technical.rst:86 ../../merchants/technical.rst:246
msgid "https://gocoin.com"
msgstr ""

#: ../../merchants/technical.rst:88
msgid ""
"The GoCoin platform makes taking Dash as easy as installing a plugin. "
"Payment processing is already implemented for every major shopping platform."
" GoCoin is focused on helping merchants in privacy-related niches and "
"specific industries, and handles all transaction risk for all payments from "
"your customers."
msgstr ""

#: ../../merchants/technical.rst:94
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. GoCoin holds Private"
" Keys on their server allowing the merchant to withdraw funds in "
"Cryptocurrency or convert to Fiat."
msgstr ""

#: ../../merchants/technical.rst:97
msgid ""
"Integrations: WooCommerce, Magento, Prestashop, VirtueMart, ZenCart, "
"OpenCart, OSCommerce, UberCart, nopCommerce, WHMCS, NATS4, Shopify."
msgstr ""

#: ../../merchants/technical.rst:99
msgid "Pricing Model: 1% Processing Fee (https://gocoin.com/fees)"
msgstr ""

#: ../../merchants/technical.rst:100
msgid "Documentation: https://gocoin.com/docs"
msgstr ""

#: ../../merchants/technical.rst:104
msgid "CoinPayments"
msgstr ""

#: ../../merchants/technical.rst:111
msgid "https://www.coinpayments.net"
msgstr ""

#: ../../merchants/technical.rst:113
msgid ""
"CoinPayments is an integrated payment gateway for cryptocurrencies such as "
"Dash. Shopping cart plugins are available for all popular webcarts used "
"today. CoinPayments can help you set up a new checkout, or integrate with "
"your pre-existing checkout."
msgstr ""

#: ../../merchants/technical.rst:118
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. CoinPayments holds "
"Private Keys on their server allowing merchant to withdraw funds in "
"Cryptocurrency or convert to Fiat."
msgstr ""

#: ../../merchants/technical.rst:121
msgid ""
"Integrations: aMember Pro, Arastta, Blesta, BoxBilling, Drupal, Ecwid, "
"Hikashop, Magento, OpenCart, OSCommerce, PrestaShop, Tomato Cart, "
"WooCommerce, Ubercart, XCart, ZenCart"
msgstr ""

#: ../../merchants/technical.rst:124
msgid ""
"Pricing Model: 0.5% Processing Fee (https://www.coinpayments.net/help-fees)"
msgstr ""

#: ../../merchants/technical.rst:126
msgid "Documentation: https://www.coinpayments.net/apidoc"
msgstr ""

#: ../../merchants/technical.rst:130
msgid "SDK Resources"
msgstr ""

#: ../../merchants/technical.rst:132
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-SDK.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:136
msgid ""
"SDKs (Software Development Kits) are used to accelerate the design and "
"development of a product for the Dash Network. These resources can either be"
" used to interface with an API provider or for the creation of standalone "
"applications."
msgstr ""

#: ../../merchants/technical.rst:143
msgid "Dash Developer Guide"
msgstr ""

#: ../../merchants/technical.rst:150
msgid "https://dash-docs.github.io/en/developer-guide"
msgstr ""

#: ../../merchants/technical.rst:152
msgid ""
"The Dash Developer Guide aims to provide the information you need to "
"understand Dash and start building Dash-based applications. To make the best"
" use of this documentation, you may want to install the current version of "
"Dash Core, either from source or from a pre-compiled executable."
msgstr ""

#: ../../merchants/technical.rst:158
msgid "Documentation: https://dash-docs.github.io/en/developer-guide"
msgstr ""

#: ../../merchants/technical.rst:162
msgid "Bitcore"
msgstr ""

#: ../../merchants/technical.rst:169
msgid "https://bitcore.io"
msgstr ""

#: ../../merchants/technical.rst:171
msgid ""
"Bitcore is a full Dash node — your apps run directly on the peer-to-peer "
"network. For wallet application development, additional indexes have been "
"added into Dash for querying address balances, transaction history, and "
"unspent outputs."
msgstr ""

#: ../../merchants/technical.rst:176
msgid "Platform: NodeJS / Javascript"
msgstr ""

#: ../../merchants/technical.rst:177
msgid "Documentation: https://bitcore.io/api/lib"
msgstr ""

#: ../../merchants/technical.rst:178
msgid "Repository: https://github.com/dashevo/bitcore-lib-dash"
msgstr ""

#: ../../merchants/technical.rst:182
msgid "DashJ"
msgstr ""

#: ../../merchants/technical.rst:189
msgid "https://github.com/HashEngineering/dashj"
msgstr ""

#: ../../merchants/technical.rst:191
msgid ""
"dashj is a library for working with the Dash protocol. It can maintain a "
"wallet, send/receive transactions without needing a local copy of Dash Core "
"and has many other advanced features. It's implemented in Java but can be "
"used from any JVM compatible language: examples in Python and JavaScript are"
" included."
msgstr ""

#: ../../merchants/technical.rst:197
msgid "Platform: Java"
msgstr ""

#: ../../merchants/technical.rst:198
msgid "Documentation: https://bitcoinj.github.io/getting-started"
msgstr ""

#: ../../merchants/technical.rst:202
msgid "NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:209
msgid "https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:211
msgid ""
"NBitcoin is the most complete Bitcoin library for the .NET platform, and has"
" been patched to include support for Dash. It implements all most relevant "
"Bitcoin Improvement Proposals (BIPs) and Dash Improvement Proposals (DIPs). "
"It also provides low level access to Dash primitives so you can easily build"
" your application on top of it."
msgstr ""

#: ../../merchants/technical.rst:217
msgid "Platform: .NET"
msgstr ""

#: ../../merchants/technical.rst:218
msgid ""
"Documentation: "
"https://programmingblockchain.gitbooks.io/programmingblockchain/content/"
msgstr ""

#: ../../merchants/technical.rst:219
msgid "Repository: https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../merchants/technical.rst:232
msgid "BlockCypher also offers client SDKs."
msgstr ""

#: ../../merchants/technical.rst:234
msgid "Platform: Ruby, Python, Java, PHP, Go, NodeJS"
msgstr ""

#: ../../merchants/technical.rst:235
msgid ""
"Repositories: https://www.blockcypher.com/dev/dash/#blockcypher-supported-"
"language-sdks"
msgstr ""

#: ../../merchants/technical.rst:248
msgid "Platform: JavaScript, PHP, Java, Ruby, .NET, Python"
msgstr ""

#: ../../merchants/technical.rst:249
msgid "Repositories: https://gocoin.com/docs"
msgstr ""

#: ../../merchants/technical.rst:253
msgid "InstantSend"
msgstr "InstantSend"

#: ../../merchants/technical.rst:255
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/merchants /Integration-"
"Resources-InstantSend.pdf>`__."
msgstr ""

#: ../../merchants/technical.rst:259
msgid ""
"InstantSend is a feature provided by the Dash network that allows for "
"0-confirmation transactions to be safely accepted by Merchants and other "
"service providers. Secured by the Masternode Network, this mechanism "
"eliminates the risk of a “Double Spend” by locking transaction inputs for a "
"given transaction at a protocol level."
msgstr ""

#: ../../merchants/technical.rst:267
msgid "InstantSend Transactions vs. Standard Transactions"
msgstr ""

#: ../../merchants/technical.rst:269
msgid ""
"From an integration perspective there are only minor differences between an "
"InstantSend Transaction and a Standard Transaction. Both transaction types "
"are formed in the same way and are signed using the same process; the key "
"difference is the fee structure and input requirements for InstantSend."
msgstr ""

#: ../../merchants/technical.rst:275
msgid ""
"Fee Structure: InstantSend utilizes a “per-input” fee of 0.0001 DASH per "
"Input."
msgstr ""

#: ../../merchants/technical.rst:277
msgid ""
"Input Requirements: All inputs for an InstantSend transaction must have at "
"least 6 confirmations."
msgstr ""

#: ../../merchants/technical.rst:280
msgid ""
"In the event that a given transaction does not meet both criteria it will "
"revert to a standard transaction."
msgstr ""

#: ../../merchants/technical.rst:284
msgid "Receiving InstantSend Transactions"
msgstr ""

#: ../../merchants/technical.rst:286
msgid ""
"InstantSend transactions are handled in the same way as a Standard "
"Transaction, typically through JSON-RPC, Insight API, or an internal "
"notification script / service that is configured at a server level."
msgstr ""

#: ../../merchants/technical.rst:290
msgid ""
"JSON-RPC: The following RPC commands will include InstantSend-related "
"information. Within the response you’ll find an “InstantLock” field the "
"status of a given Transaction. This true/false (boolean) value will indicate"
" whether an InstantSend has been observed."
msgstr ""

#: ../../merchants/technical.rst:295
msgid ""
"GetTransaction: https://dash-docs.github.io/en/developer-"
"reference#gettransaction"
msgstr ""

#: ../../merchants/technical.rst:296
msgid ""
"ListTransactions: https://dash-docs.github.io/en/developer-"
"reference#listtransactions"
msgstr ""

#: ../../merchants/technical.rst:297
msgid ""
"ListSinceBlock: https://dash-docs.github.io/en/developer-"
"reference#listsinceblock"
msgstr ""

#: ../../merchants/technical.rst:299
msgid ""
"Insight API: Insight API can be used to detect InstantSend transactions and "
"to push notifications to clients using WebSockets. The API can also be "
"manually polled to retrieve Transaction information including InstantSend "
"status."
msgstr ""

#: ../../merchants/technical.rst:304
msgid "Web Socket: https://github.com/dashpay/insight-api-dash#web-socket-api"
msgstr ""

#: ../../merchants/technical.rst:305
msgid ""
"Transaction API: https://github.com/dashpay/insight-api-dash#instantsend-"
"transactions"
msgstr ""

#: ../../merchants/technical.rst:307
msgid ""
"Script Notify: The Dash Core Daemon can be configured to execute an external"
" script whenever an InstantSend transaction relating to that wallet is "
"observed. This is configured by adding the following line to the dash.conf "
"file:"
msgstr ""

#: ../../merchants/technical.rst:312
msgid "``instantsendnotify=/path/to/concurrent/safe/handler %s``"
msgstr ""

#: ../../merchants/technical.rst:314
msgid ""
"*Note that only addresses imported to the wallet will be monitored for "
"InstantSend Transactions.*"
msgstr ""

#: ../../merchants/technical.rst:318
msgid "Broadcasting InstantSend Transactions"
msgstr ""

#: ../../merchants/technical.rst:320
msgid ""
"InstantSend Transactions can be constructed and broadcast using an approach "
"similar to Standard Transactions. Provided the InstantSend Fee Structure and"
" Input Requirements are met, an InstantSend can be broadcast using JSON-RPC "
"or Insight API as a Raw Transaction."
msgstr ""

#: ../../merchants/technical.rst:325
msgid ""
"JSON-RPC: The “SendRawTransaction” RPC command can be utilized to broadcast "
"a raw transaction using InstantSend. When utilizing this command be sure to "
"set both optional parameters as “true”"
msgstr ""

#: ../../merchants/technical.rst:329
msgid ""
"``sendrawtransaction \"hexstring\" ( allowhighfees instantsend )`` "
"``sendrawtransaction \"hexstring\" true true``"
msgstr ""

#: ../../merchants/technical.rst:332
msgid ""
"More Information: https://dash-docs.github.io/en/developer-"
"reference#sendrawtransaction"
msgstr ""

#: ../../merchants/technical.rst:334
msgid ""
"Insight API: Raw Transactions can also be broadcast as an InstantSend using "
"Insight API. In this case all that is required is to POST the raw "
"transaction using the ``/tx/sendix`` route."
msgstr ""

#: ../../merchants/technical.rst:338
msgid ""
"More Information: https://github.com/dashevo/insight-api#instantsend-"
"transaction"
msgstr ""

#: ../../merchants/technical.rst:341
msgid "Additional Resources"
msgstr ""

#: ../../merchants/technical.rst:343
msgid ""
"The following resources provide additional information about InstantSend and"
" are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""

#: ../../merchants/technical.rst:347
msgid ""
"`InstantSend Whitepaper "
"<https://dashpay.atlassian.net/wiki/download/attachments/75530298/Dash%20Whitepaper%20-%20InstantTX.pdf>`_"
msgstr ""

#: ../../merchants/technical.rst:348
msgid ""
"`How Dash InstantSend Protect Merchants from Double Spends "
"<https://www.youtube.com/watch?v=HJx82On8jig>`_"
msgstr ""

#: ../../merchants/technical.rst:349
msgid ""
"`InstantSend Presentation from the Dash Conference London 2017 "
"<https://www.youtube.com/watch?v=n4PELomRiFY>`_"
msgstr ""

#: ../../merchants/technical.rst:352
msgid "Price Tickers"
msgstr ""

#: ../../merchants/technical.rst:354
msgid ""
"You can add a simple price ticket widget to your website using the simple "
"`code snippet generator from CoinGecko "
"<https://www.coingecko.com/en/widgets/ticker/dash/usd>`_."
msgstr ""

#: ../../merchants/technical.rst:364
msgid ""
"Similar widgets with different designs are available from `CoinLib "
"<https://coinlib.io/widgets>`_, `WorldCoinIndex "
"<https://www.worldcoinindex.com/Widget>`_, `Coinoxo "
"<https://www.coinoxo.com/charts/DASH>`_ and `Cryptonator "
"<https://www.cryptonator.com/widget>`_, while an API providing similar "
"information is available from `DashCentral "
"<https://www.dashcentral.org/about/api>`_."
msgstr ""
