# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-25 08:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: John Theman <Grdash@mail.com>, 2018\n"
"Language-Team: Greek (https://www.transifex.com/dash/teams/37570/el/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: el\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../developers/compiling.rst:5
msgid "Compiling Dash Core"
msgstr "Δημιουργώντας τον Πυρήνα του Dash"

#: ../../developers/compiling.rst:7
msgid ""
"While Dash offers stable binary builds on the `website "
"<https://www.dash.org/wallets>`_, on `Github "
"<https://github.com/dashpay/dash/releases>`_ and through development builds "
"using `Bamboo <https://bamboo.dash.org>`_, many users will also be "
"interested in building Dash binaries for themselves. The following guides "
"are available:"
msgstr ""
"Το Dash προσφέρει σταθερά binary builds στην `ιστοσελίδα "
"<https://www.dash.org/wallets>`_, στο `Github "
"<https://github.com/dashpay/dash/releases>`_ και μέσω δημιουργικών builds "
"χρησιμοποιώντας το `Bamboo <https://bamboo.dash.org>`_, εντούτοις πολλοί "
"χρήστες μπορεί να θέλουν να φτιάξουν τα δικά τους Dash binaries. Για αυτόν "
"τον λόγο υπάρχουν οι εξής οδηγοί:"

#: ../../developers/compiling.rst:14
msgid "Eclipse (coming soon)"
msgstr "Eclipse (προσεχώς)"

#: ../../developers/compiling.rst:15
msgid ":ref:`Building on Linux <linux-build>`"
msgstr ":ref:`Βασισμένο στο Linux <linux-build>`"

#: ../../developers/compiling.rst:16
msgid ":ref:`Gitian deterministic builds <gitian-build>`"
msgstr ":ref:`Gitian deterministic builds <gitian-build>`"

#: ../../developers/compiling.rst:21
msgid "Linux"
msgstr "Linux"

#: ../../developers/compiling.rst:23
msgid ""
"This guide describes how to build Dash Core wallet without the GUI from "
"source under Ubuntu Linux. It is intended to serve as a simple guide for "
"general compilation of non-deterministic binary files from the stable source"
" code. A standard installation of Ubuntu Linux 16.04 LTS will be used as an "
"environment for the build. We assume you are running as a user with sudo "
"permissions. First add the necessary extra repository and update all "
"packages::"
msgstr ""
"Σε αυτόν τον οδηγό θα μάθετε πως να φτιάξετε ένα πορτοφόλι Dash Core χωρίς "
"το GUI της πηγής μέσω του Ubuntu Linux. Είναι ένας απλός οδηγός για μία "
"γενική συμπλήρωση non-determenistic binary αρχείων από το σταθερό source "
"code. Θα χρησιμοποιήσουμε μία τυπική εγκατάσταση του Ubuntu Linux 16.04 LTS "
"για την κατασκευή. Υποθέτουμε ότι τρέχετε το πρόγραμμα ως χρήστης με sudo "
"permisssions. Πρώτα προσθέστε όλες τα αναγκαίες εξτρα repositories και "
"ενημερώστε όλα τα πακέτα::"

#: ../../developers/compiling.rst:35
msgid ""
"Now install the dependencies as described in the installation "
"documentation::"
msgstr ""
"Τώρα εγκαταστήστε τα dependencies όπως περιγράφεται στα έγγραφα της "
"εγκατάστασης::"

#: ../../developers/compiling.rst:41
msgid ""
"Optionally install the Qt dependencies if you want to build the Dash GUI::"
msgstr ""
"Επιλεκτικά μπορείτε να εγκαταστησετε τα Qt dependencies αν θέλετε να "
"φτιάξετε το Dash GUI::"

#: ../../developers/compiling.rst:46
msgid "Download the stable Dash repository::"
msgstr "Κατεβάστε το σταθερό Dash repository::"

#: ../../developers/compiling.rst:50
msgid "And build::"
msgstr "Και δημιουργήστε::"

#: ../../developers/compiling.rst:58
msgid "``/usr/local/bin`` now contains the compiled Dash binaries."
msgstr ""
"Το ``/usr/local/bin`` τώρα περιλαμβάνει τα Dash binaries που συλλέξατε."

#: ../../developers/compiling.rst:63
msgid "Gitian"
msgstr "Gitian"

#: ../../developers/compiling.rst:65
msgid ""
"Gitian is the deterministic build process that is used to build the Dash "
"Core executables. It provides a way to be reasonably sure that the "
"executables are really built from the source on GitHub. It also makes sure "
"that the same, tested dependencies are used and statically built into the "
"executable. Multiple developers build the source code by following a "
"specific descriptor (\"recipe\"), cryptographically sign the result, and "
"upload the resulting signature. These results are compared and only if they "
"match, the build is accepted and uploaded to dash.org."
msgstr ""
"Το Gitian είναι η προσιοριστική διαδικασία δημιουργίας που χρησιμοποιούμε "
"για να φτιάξουμε Dash Core executables. Μας δίνει ένα τρόπο για να είμαστε "
"απολύτως σίγουροι ότι τα executables είναι φτιαγμένα από την πηγή (source) "
"στο GitHub. Επίσης διασφαλίζει ότι τα ίδια, ελεγμένα dependencies "
"χρησιμοποιούνται και ενσωματώνονται στατικά στο executable. Πολλαπλοί "
"developers χτίζουν τον source code ακολουθώντας μία συγκεκριμένη "
"\"συνταγή\", υπογράφοντας κρπτογραφικά το αποτέλεσμα και ανεβάζουν την "
"υπογραφή που προκύπτει. Τα αποτελέσματα συγκρίνονται και μόνο αν συμπίπτουν,"
" το build γίνεται δεκτό και ανεβαίνει στο dash.org."

#: ../../developers/compiling.rst:74
msgid ""
"More independent Gitian builders are needed, which is why this guide exists."
" It is preferred you follow these steps yourself instead of using someone "
"else's VM image to avoid 'contaminating' the build."
msgstr ""
"Χρειαζόμαστε περισσότερους Gitian builders, για αυτό άλλωστε και υπάρχει "
"αυτός ο οδηγός. Είναι προτιμώτερο να ακολουθήσετε αυτά τα βήματα ο ίδιος από"
" το να χρησιμοποιήσετε την εικόνα VM κάποιου άλλου για να μην \"μολυνθεί\" "
"το build."

#: ../../developers/compiling.rst:79
msgid "Setup the host environment"
msgstr "Διαμορφώστε το host environment"

#: ../../developers/compiling.rst:81
msgid ""
"Gitian builds are known to be working on Debian 8.x. If your machine is "
"already running this sytem, you can perform Gitian builds on the actual "
"hardware. Alternatively, you can install it in a virtual machine. Follow the"
" guide for :ref:`setting up a VPS for masternodes <vps-setup>`, selecting a "
"Debian 8.x image during the installation process and naming your non-root "
"user ``gitianuser``. Selecting a VPS with two processors will also greatly "
"speed up the build process. If you cannot login to your VPS over SSH as "
"root, access the terminal and issue the following command::"
msgstr ""
"Τα Gitian builds δουλεύουν στο Debian 8.x. Αν το μηχάνημά σας ήδη τρέχει "
"αυτό το σύστημα, μπορείτε να κάνετε Gitian builds στο hardware σας. "
"Εναλλακτικά, μπορείτε να το εγκαταστήσετε σε ένα virtual machine.Ακολουθήστε"
" τον οδηγό :ref:`διαμορφώνοντας ένα VPS για masternodes <vps-setup>`, "
"επιλέξτε την εικόνα του Debian 8.x κατά την διάρκεια της εγκατάστασης και "
"ονομάστε τον non-root χρήστη σας ``gitianuser``. Αν επιλέξετε έαν VPS με δύο"
" επεξεργαστές θα επιταχύνετε σημαντικά την διαδικασία build. Αν δεν μπορείτε"
" να κάνετε login στο VPS over SSH ως root, μπείτε στο terminal  και "
"πληκτρολογήστε την παρακάτω εντολή::"

#: ../../developers/compiling.rst:94
msgid ""
"Log in to your new environment by SSH as root. Set up the dependencies first"
" by pasting the following in the terminal::"
msgstr ""
"Καντε log in  στο νέο περιβάλλον μέσω SSH ως root. Διαμορφώστε πρώτα τα "
"dependancies κάνωντας paste τα παρακάτω στο terminal::"

#: ../../developers/compiling.rst:100
msgid ""
"Then set up LXC and the rest with the following, which is a complex jumble "
"of settings and workarounds::"
msgstr ""
"Μετά διαμορφώστε το LXC και τα υπόλοιπα με τα παρακάτω, τα οποία είναι μια "
"πολύπλοκη ομάδα από settings και workarounds::"

#: ../../developers/compiling.rst:121
msgid ""
"At the end Debian is rebooted to make sure that the changes take effect. Re-"
"login as the user gitianuser that was created during installation. The rest "
"of the steps in this guide will be performed as that user."
msgstr ""
"Στο τέλος το Debian κάνει επανεκκίνηση για να επαληθεύσει ότι ισχύουν οι "
"αλλαγές. Ξανα κάντε login ως ο χρήστης gitianuser που δημιουργήσατε κατά την"
" διάρκεια της εγκατάστασης. Όλα τα υπόλοιπα βήματα σε αυτόν τον οδηγό "
"γίνονται με αυτόν τον χρήστη."

#: ../../developers/compiling.rst:125
msgid ""
"There is no ``python-vm-builder`` package in Debian, so we need to install "
"it from source ourselves::"
msgstr ""
"Δεν υπάρχει πακέτο ``python-vm-builder`` στο Debian, οπότε πρέπει να το "
"εγκαταστήσουμε από την πηγή μόνοι μας::"

#: ../../developers/compiling.rst:137
msgid "Set up the environment and compile"
msgstr "Διαμορφώστε το περιβάλλον και κάντε compile"

#: ../../developers/compiling.rst:139
msgid "Clone the Dash Core repository to your home directory::"
msgstr "Κλωνοποιήστε την αποθήκη Dash Core στο δικό σας home directory::"

#: ../../developers/compiling.rst:143
msgid "Then create the script file::"
msgstr "Έπειτα δημιουργήστε το αρχείο script::"

#: ../../developers/compiling.rst:147
msgid ""
"And paste the following script in place (this will be automatic if/when the "
"script is pulled into Dash Core)::"
msgstr ""
"Και κάντε paste το ακόλουθο script (αυτό θα γίνει αυτόματα αν/όταν το script"
" τοποθετείται στο Dash Core)::"

#: ../../developers/compiling.rst:152
msgid "Save the file and set it executable::"
msgstr "Αποθηκεύστε το αρχείο και θέστε το ως executable::"

#: ../../developers/compiling.rst:156
msgid ""
"Set up the environment, replacing the name and version with your name and "
"target version::"
msgstr ""
"Διαμορφώστε το περιβάλλον, αντικαθιστώντας το όνομα και την έκδοση με το "
"δικό σας όνομα και την έκδοση στόχο::"

#: ../../developers/compiling.rst:161
msgid "Run the compilation script::"
msgstr "Τρέξτε το compilation script::"

#: ../../developers/compiling.rst:165
msgid ""
"Your system will build all dependencies and Dash Core from scratch for "
"Windows and Linux platforms (macOS if the dependencies were installed "
"according to `these instructions "
"<https://github.com/dashpay/dash/blob/master/doc/build-osx.md>`_). This can "
"take some time. When complete, you will see the SHA256 checksums, which you "
"can compare against the hashes available on the `Dash website "
"<https://www.dash.org/wallets>`_. In this way, you can be sure that you are "
"running original and untampered builds of the code as it exists on Github."
msgstr ""
"Το σύστημά σας θα χτίσει όλα τα dependencies και το Dash Core απο την αρχή "
"για τις πλατφόρμες Windows και Linux (και το macOS αν τα dependencies "
"εγκαταστάθηκαν σύμφωνα με `αυτές τις οδηγίες "
"<https://github.com/dashpay/dash/blob/master/doc/build-osx.md>`_). Αυτό "
"μπορεί να πάρει λίγη ώρα. Μόλις ολοκληρωθεί θα δείτε τα SHA256 checksums, τα"
" οποία μπορείτε να τα συγκρίνετε με αυτά που είναι διαθέσιμα σην ιστοσελίδα "
"του  `Dash <https://www.dash.org/wallets>`_. Με αυτό τον τρόπο μπορείτε να "
"είστε σίγουροι ότι τρέχετε πρωτότυπα και αναλλοίωτα builds του κώδικα όπως "
"είναι στο Github."
