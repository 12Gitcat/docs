# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
# Translators:
# Alex.ys <silvershark.ys@gmail.com>, 2018
# Leon White <leon.white@dash.org>, 2018
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-11 06:48+0000\n"
"PO-Revision-Date: 2018-03-29 10:35+0000\n"
"Last-Translator: Leon White <leon.white@dash.org>, 2018\n"
"Language: zh_Hans_CN\n"
"Language-Team: Chinese (China) "
"(https://www.transifex.com/dash/teams/37570/zh_CN/)\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../masternodes/setup.rst:1
msgid ""
"This guide describes how to set up a Dash masternode. It also describes "
"various options for hosting and different wallets"
msgstr "本指南描述了如何架设达世币主节点。还介绍了各种托管服务和不同的钱包选择"

#: ../../masternodes/setup.rst:1
#, fuzzy
msgid "dash, guide, masternodes, trezor, dip3, setup, bls"
msgstr "dash，指南，主节点，trezor"

#: ../../masternodes/setup.rst:9
msgid "Setup"
msgstr "架设"

#: ../../masternodes/setup.rst:11
msgid ""
"Setting up a masternode requires a basic understanding of Linux and "
"blockchain technology, as well as an ability to follow instructions "
"closely. It also requires regular maintenance and careful security, "
"particularly if you are not storing your Dash on a hardware wallet. There"
" are some decisions to be made along the way, and optional extra steps to"
" take for increased security."
msgstr "架设一个主节点需要对Linux和区块链技术有基本的理解，并且需要能够严格遵循指令。主节点也需要定期的维护和谨慎的安全部署，特别是当您没有把您的达世币存储在硬件钱包上的时候。在此过程中，需要做出一些选择，并采取可选的额外步骤来提高安全性。"

#: ../../masternodes/setup.rst:18
msgid ""
"Commercial :ref:`masternode hosting services <masternode-hosting>` are "
"available if you prefer to delegate day-to-day operation of your "
"masternode to a professional operator. When using these hosting services,"
" you retain full control of the 1000 DASH collateral and pay an agreed "
"percentage of your reward to the operator. It is also possible to "
"delegate your voting keys to a representative, see the :ref:`governance "
"documentation <delegating-votes>` for more information."
msgstr ""

#: ../../masternodes/setup.rst:29
msgid "Before you begin"
msgstr "在您开始之前"

#: ../../masternodes/setup.rst:31
msgid ""
"This guide assumes you are setting up a single masternode for the first "
"time. If you are updating a masternode, see  :ref:`here <masternode-"
"update>` instead. If Spork 15 is not yet enabled, it is not possible to "
"directly set up a DIP003 masternode. You will need to set up the "
"masternode following the `old process "
"<https://docs.dash.org/en/0.12.3/masternodes/setup.html>`_ and then work "
"through the :ref:`upgrade procedure <dip3-upgrade>`. You will need:"
msgstr ""

#: ../../masternodes/setup.rst:39
msgid "1000 Dash"
msgstr "1000个达世币"

#: ../../masternodes/setup.rst:40
msgid ""
"A wallet to store your Dash, preferably a hardware wallet, although Dash "
"Core wallet is also supported"
msgstr "存储您达世币的钱包，最好是硬件钱包，当然也支持Dash Core钱包"

#: ../../masternodes/setup.rst:42
msgid "A Linux server, preferably a Virtual Private Server (VPS)"
msgstr "Linux服务器，最好是虚拟专用服务器(VPS)"

#: ../../masternodes/setup.rst:44
msgid ""
"Dash 0.13.0 implements DIP003, which introduces several changes to how a "
"Dash masternode is set up and operated. A list of available documentation"
" appears below:"
msgstr ""

#: ../../masternodes/setup.rst:48
msgid ""
"`DIP003 Deterministic Masternode Lists "
"<https://github.com/dashpay/dips/blob/master/dip-0003.md>`__"
msgstr ""

#: ../../masternodes/setup.rst:49
msgid ":ref:`dip3-changes`"
msgstr ""

#: ../../masternodes/setup.rst:50
msgid ":ref:`dip3-upgrade`"
msgstr ""

#: ../../masternodes/setup.rst:51
msgid ":ref:`Full masternode setup guide <masternode-setup>` (you are here)"
msgstr ""

#: ../../masternodes/setup.rst:52
msgid ":ref:`Information for users of hosted masternodes <hosted-setup>`"
msgstr ""

#: ../../masternodes/setup.rst:53
msgid ""
":ref:`Information for operators of hosted masternodes <operator-"
"transactions>`"
msgstr ""

#: ../../masternodes/setup.rst:55
msgid ""
"It is highly recommended to first read at least the list of changes "
"before continuing in order to familiarize yourself with the new concepts "
"in DIP003. This documentation describes the commands as if they were "
"entered in the Dash Core GUI by opening the console from **Tools > Debug "
"console**, but the same result can be achieved on a masternode by "
"entering the same commands and adding the prefix ``~/.dashcore/dash-cli``"
" to each command."
msgstr ""

#: ../../masternodes/setup.rst:67
msgid "Set up your VPS"
msgstr "设置您的VPS"

#: ../../masternodes/setup.rst:69
#, fuzzy
msgid ""
"A VPS, more commonly known as a cloud server, is fully functional "
"installation of an operating system (usually Linux) operating within a "
"virtual machine. The virtual machine allows the VPS provider to run "
"multiple systems on one physical server, making it more efficient and "
"much cheaper than having a single operating system running on the \"bare "
"metal\" of each server. A VPS is ideal for hosting a Dash masternode "
"because they typically offer guaranteed uptime, redundancy in the case of"
" hardware failure and a static IP address that is required to ensure you "
"remain in the masternode payment queue. While running a masternode from "
"home on a desktop computer is technically possible, it will most likely "
"not work reliably because most ISPs allocate dynamic IP addresses to home"
" users."
msgstr ""
"通常被称为云服务器的VPS，是在虚拟机中运行的操作系统(通常是Linux)的全功能安装。虚拟机允许VPS提供程序在一台物理服务器上运行多个系统，这使得它比在每台服务器的"
" “裸金属” "
"上运行单个操作系统更高效、更便宜。VPS是托管达世币主节点的理想选择，因为它们通常提供有保证的正常运行时间、硬件故障时的冗余以及确保您保持在主节点支付队列中所需的静态IP地址。虽然在家中从桌面计算机上运行主节点在技术上是可能的，但它很可能无法可靠地工作，因为大多数ISPs为家庭用户分配动态IP地址。"

#: ../../masternodes/setup.rst:82
#, fuzzy
msgid ""
"We will use `Vultr <https://www.vultr.com/>`_ hosting as an example of a "
"VPS, although `DigitalOcean <https://www.digitalocean.com/>`_, `Amazon "
"EC2 <https://aws.amazon.com/ec2>`_, `Google Cloud "
"<https://cloud.google.com/compute/>`_, `Choopa "
"<https://www.choopa.com/>`_ and `OVH <https://www.ovh.com/>`_ are also "
"popular choices. First create an account and add credit. Then go to the "
"**Servers** menu item on the left and click **+** to add a new server. "
"Select a location for your new server on the following screen:"
msgstr ""
"我们将使用\\ `Vultr <https://www.vultr.com/>`_\\ 托管作为VPS的示例，尽管\\ `DigitalOcean"
" <https://www.digitalocean.com/>`_\\ 、\\ `Amazon EC2 "
"<https://aws.amazon.com/ec2>`_\\ 、\\ `Google Cloud "
"<https://cloud.google.com/compute/>`_\\ 、\\ `Choopa "
"<https://www.choopa.com/>`_\\ 以及\\ `OVH <https://www.ovh.com/>`_\\ "
"也都是流行的选择。首先，创建一个帐户并添加信用。然后转到左侧的服务器菜单并单击 **+** "
"以添加一个新的服务器。在以下屏幕上选择您的新服务器的位置："

#: ../../masternodes/setup.rst:94
msgid "Vultr server location selection screen"
msgstr "Vultr服务器位置选择屏幕"

#: ../../masternodes/setup.rst:96
msgid ""
"Select Ubuntu 18.04 x64 as the server type. We use this LTS release of "
"Ubuntu instead of the latest version because LTS releases are supported "
"with security updates for 5 years, instead of the usual 9 months."
msgstr ""

#: ../../masternodes/setup.rst:103
msgid "Vultr server type selection screen"
msgstr "Vultr服务器类型选择屏幕"

#: ../../masternodes/setup.rst:105
msgid "Select a server size offering at least 2GB of memory."
msgstr "选择至少提供2GB内存的服务器。"

#: ../../masternodes/setup.rst:110
msgid "Vultr server size selection screen"
msgstr "Vultr服务器大小选择屏幕"

#: ../../masternodes/setup.rst:112
msgid ""
"Enter a hostname and label for your server. In this example we will use "
"``dashmn1`` as the hostname."
msgstr "为您的服务器输入主机名和标签。在本例中，我们将使用\\ ``dashmn1``\\ 作为主机名。"

#: ../../masternodes/setup.rst:118
msgid "Vultr server hostname & label selection screen"
msgstr "Vultr服务器主机名和标签选择屏幕"

#: ../../masternodes/setup.rst:120
msgid "Vultr will now install your server. This process may take a few minutes."
msgstr "Vultr现在将安装您的服务器。这个过程可能需要几分钟。"

#: ../../masternodes/setup.rst:125
msgid "Vultr server installation screen"
msgstr "Vultr服务器安装屏幕"

#: ../../masternodes/setup.rst:127
msgid ""
"Click **Manage** when installation is complete and take note of the IP "
"address, username and password."
msgstr "在安装完成后，单击 **Manage** ，并记下IP地址、用户名和密码。"

#: ../../masternodes/setup.rst:133
msgid "Vultr server management screen"
msgstr "Vultr服务器管理屏幕"

#: ../../masternodes/setup.rst:137
msgid "Set up your operating system"
msgstr "设置您的操作系统"

#: ../../masternodes/setup.rst:139
msgid ""
"We will begin by connecting to your newly provisioned server. On Windows,"
" we will first download an app called PuTTY to connect to the server. Go "
"to the `PuTTY download page "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_ and "
"select the appropriate MSI installer for your system. On Mac or Linux you"
" can ssh directly from the terminal - simply type ``ssh "
"root@<server_ip>`` and enter your password when prompted."
msgstr ""
"我们将从连接到您新提供的服务器开始。在Windows上，我们将首先下载一个名为PuTTY的应用程序来连接到服务器。转到\\ `PuTTY "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_\\ "
"下载页面并为您的系统选择适当的MSI安装程序。在Mac或Linux上，您可以直接从终端中 -只需键入\\ ``ssh "
"root@<server_ip>`` ，然后在提示时输入密码。"

#: ../../masternodes/setup.rst:150
msgid "PuTTY download page"
msgstr "PuTTY下载页面"

#: ../../masternodes/setup.rst:152
msgid ""
"Double-click the downloaded file to install PuTTY, then run the app from "
"your Start menu. Enter the IP address of the server in the **Host Name** "
"field and click **Open**. You may see a certificate warning, since this "
"is the first time you are connecting to this server. You can safely click"
" **Yes** to trust this server in the future."
msgstr ""
"双击下载的文件安装PuTTY，然后从您的开始菜单中运行该应用程序。在\\ **主机名**\\ 字段中输入服务器的IP地址，然后单击\\ "
"**打开**\\ 。您可能会看到证书警告，因为这是您第一次连接到此服务器。之后您可以安全地单击\\ **是**\\ 来信任服务器。"

#: ../../masternodes/setup.rst:161
msgid "PuTTY security alert when connecting to a new server"
msgstr "连接到新服务器时的PuTTY安全警告"

#: ../../masternodes/setup.rst:163
msgid ""
"You are now connected to your server and should see a terminal window. "
"Begin by logging in to your server with the user ``root`` and password "
"supplied by your hosting provider."
msgstr "您现在已连接到您的服务器，并且应该会看到一个终端窗口。 首先，使用您的主机提供商提供的用户\\ ``root``\\ 和密码登录到您的服务器。"

#: ../../masternodes/setup.rst:170
msgid "Password challenge when connecting to your VPS for the first time"
msgstr "第一次连接到您的VPS时会遇到密码问题"

#: ../../masternodes/setup.rst:172
msgid ""
"You should immediately change the root password and store it in a safe "
"place for security. You can copy and paste any of the following commands "
"by selecting them in your browser, pressing **Ctrl + C**, then switching "
"to the PuTTY window and right-clicking in the window. The text will paste"
" at the current cursor location::"
msgstr ""
"为了确保安全，您应该立即更改root密码，并将其存储在安全的地方。您可以复制和粘贴以下任何命令，方法是在您的浏览器中选择这些命令，按下\\ "
"**Ctrl + C**\\ ，然后切换到PuTTY窗口，并在窗口中右键单击。文本将粘贴在当前光标位置::"

#: ../../masternodes/setup.rst:180
msgid ""
"Enter and confirm a new password (preferably long and randomly "
"generated). Next we will create a new user with the following command, "
"replacing ``<username>`` with a username of your choice::"
msgstr ""
"输入并确认一个新密码(最好是长的和随机生成的)。接下来，我们将使用以下命令，将\\ ``<username>``\\ "
"替换为您喜欢的用户名来创建一个新用户::"

#: ../../masternodes/setup.rst:186
msgid ""
"You will be prompted for a password. Enter and confirm using a new "
"password (different to your root password) and store it in a safe place. "
"You will also see prompts for user information, but this can be left "
"blank. Once the user has been created, we will add them to the sudo group"
" so they can perform commands as root::"
msgstr "您将被提示输入密码。输入并确认使用新密码(与您的root密码不同)，并将其存储在安全的地方。您还将看到有关用户信息的提示，但可以将其保留为空白。一旦创建了用户，我们将把它们添加到sudo组中，这样它们就能以root用户的身份执行命令::"

#: ../../masternodes/setup.rst:194
msgid ""
"Now, while still as root, we will update the system from the Ubuntu "
"package repository::"
msgstr "现在，在仍是root用户时，我们将从Ubuntu软件包存储库更新系统::"

#: ../../masternodes/setup.rst:200
msgid ""
"The system will show a list of upgradable packages. Press **Y** and "
"**Enter** to install the packages. We will now install a firewall (and "
"some other packages we will use later), add swap memory and reboot the "
"server to apply any necessary kernel updates, and then login to our newly"
" secured environment as the new user::"
msgstr ""
"系统将显示可升级软件包的列表。按\\ **Y**\\ 和\\ **Enter**\\ "
"来安装软件包。现在我们将安装防火墙(以及稍后使用的其他软件包)，添加交换内存和重新启动服务器以应用任何必要的内核更新，然后以新用户的身份登录到我们新的安全环境::"

#: ../../masternodes/setup.rst:208 ../../masternodes/setup.rst:218
#: ../../masternodes/setup.rst:445
msgid "(press **Y** and **Enter** to confirm)"
msgstr "(按\\ **Y**\\ 和\\ **Enter**\\ 以确认)"

#: ../../masternodes/setup.rst:228
msgid ""
"Add the following line at the end of the file (press tab to separate each"
" word/number), then press **Ctrl + X** to close the editor, then **Y** "
"and **Enter** save the file."
msgstr ""
"在文件末尾添加以下行(按tab键来分隔每个单词/数字)，然后按\\ **Ctrl + X**\\ 来关闭编辑器，再按\\ **Y**\\ 和\\ "
"**Enter**\\ 保存该文件。"

#: ../../masternodes/setup.rst:236
msgid ""
"Finally, in order to prevent brute force password hacking attacks, open "
"the SSH configuration file to disable root login over SSH::"
msgstr "最后，为了防止暴力密码黑客攻击，请打开SSH配置文件以禁用SSH上的root登录::"

#: ../../masternodes/setup.rst:241
msgid ""
"Locate the line that reads ``PermitRootLogin yes`` and set it to "
"``PermitRootLogin no``. Directly below this, add a line which reads "
"``AllowUsers <username>``, replacing ``<username>`` with the username you"
" selected above. The press **Ctrl + X** to close the editor, then **Y** "
"and **Enter** save the file."
msgstr ""
"找到一行\\ ``PermitRootLogin Yes``\\ ，并将其设置为\\ ``PermitRootLogin no``\\ "
"。在此下面，添加一行内容为\\ ``AllowUser <username>``\\ ，将\\ ``<username>``\\ "
"替换为您在上面选择的用户名。按下\\ **Ctrl + X**\\ 来关闭编辑器，然后按\\ **Y**\\ 和\\ **Enter**\\ "
"保存该文件。"

#: ../../masternodes/setup.rst:247
msgid "Then reboot the server:"
msgstr "然后重新启动服务器:"

#: ../../masternodes/setup.rst:253
msgid "PuTTY will disconnect when the server reboots."
msgstr "当服务器重新启动时，PuTTY将断开连接。"

#: ../../masternodes/setup.rst:255
#, fuzzy
msgid ""
"While this setup includes basic steps to protect your server against "
"attacks, much more can be done. In particular, `authenticating with a "
"public key <https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_ instead"
" of a username/password combination, `installing fail2ban "
"<https://www.linode.com/docs/security/using-fail2ban-for-security>`_ to "
"block login brute force attacks and `enabling automatic security updates "
"<https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_ is "
"advisable. More tips are available `here <https://www.cyberciti.biz/tips"
"/linux-security.html>`__. However, since the masternode does not actually"
" store the keys to any Dash, these steps are considered beyond the scope "
"of this guide."
msgstr ""
"虽然此设置包括保护您的服务器免受攻击的基本步骤，但还可以做更多的工作。特别是\\ `使用公钥 "
"<https://help.ubuntu.com/community/SSH/OpenSSH/Keys>`_\\ "
"而不是用户名/密码组合来进行身份验证，\\ `安装Fail2ban <https://www.linode.com/docs/security"
"/using-fail2ban-for-security>`_\\ 来阻止登录暴力攻击，且可以\\ `启动自动安全升级 "
"<https://help.ubuntu.com/community/AutomaticSecurityUpdates>`_\\ "
"。更多提示可以在\\ `此处 <https://www.cyberciti.biz/tips /linux-security.html>`__\\"
" 获得。但是，由于主节点实际上并不存储任何Dash的密钥，这些步骤被认为超出了本指南的范围。"

#: ../../masternodes/setup.rst:268
msgid "Send the collateral"
msgstr "发送保证金"

#: ../../masternodes/setup.rst:270
msgid ""
"A Dash address with a single unspent transaction output (UTXO) of exactly"
" 1000 DASH is required to operate a masternode. Once it has been sent, "
"various keys regarding the transaction must be extracted for later entry "
"in a configuration file and registration transaction as proof to write "
"the configuration to the blockchain so the masternode can be included in "
"the deterministic list. A masternode can be started from a hardware "
"wallet or the official Dash Core wallet, although a hardware wallet is "
"highly recommended to enhance security and protect yourself against "
"hacking. This guide will describe the steps for both hardware wallets and"
" Dash Core."
msgstr ""

#: ../../masternodes/setup.rst:282
msgid "Option 1: Sending from a hardware wallet"
msgstr "选项1：从硬件钱包发送"

#: ../../masternodes/setup.rst:284
#, fuzzy
msgid ""
"Set up your Trezor using the Trezor wallet at https://wallet.trezor.io/ "
"and send a test transaction to verify that it is working properly. For "
"help on this, see :ref:`this guide <hardware-trezor>` - you may also "
"choose to (carefully!) `add a passphrase <https://blog.trezor.io/hide-"
"your-trezor-wallets-with-multiple-passphrases-f2e0834026eb>`_ to your "
"Trezor to further protect your collateral. Create a new account in your "
"Trezor wallet by clicking **Add account**. Then click the **Receive** tab"
" and send exactly 1000 DASH to the address displayed. If you are setting "
"up multiple masternodes, send 1000 DASH to consecutive addresses within "
"the same new account. You should see the transaction as soon as the first"
" confirmation arrives, usually within a few minutes."
msgstr ""
"使用\\ https://wallet.trezor.io/ \\ "
"上的Trezor钱包设置您的Trezor，并发送一个测试交易以验证它是否正常工作。有关此方面的帮助，请参阅\\ :ref:`此处 "
"<hardware-trezor>`\\ 。您也可以（小心）选择\\ `在Trezor中添加一个密码 "
"<https://blog.trezor.io/hide- your-trezor-wallets-with-multiple-"
"passphrases-f2e0834026eb>`_\\ 以进一步保护您的保证金。单击\\ **添加账户**\\ "
"以在您的Trezor钱包中添加一个新的账户。然后单击\\ **接收**\\ "
"选项卡，并准确地向所显示的地址发送1000个达世币。如果您正在设置多个主节点，则向同一新帐户内的连续地址发送1000个达世币。您应该在第一笔确认到达时立即查看交易，通常需要几分钟。"

#: ../../masternodes/setup.rst:298
msgid ""
"Trezor Wallet Receive tab showing successfully received collateral of "
"1000 DASH"
msgstr "Trezor钱包接收选项卡显示成功接收到1000个达世币的保证金"

#: ../../masternodes/setup.rst:301
msgid ""
"Once the transaction appears, click the QR code on the right to view the "
"transaction on the blockchain. Keep this window open as we complete the "
"following steps, since we will soon need to confirm that 15 confirmations"
" exist, as shown in the following screenshot."
msgstr "交易出现后，单击右侧的QR代码，查看区块链上的交易。在我们完成以下步骤时，请保持此窗口打开，因为我们很快将需要确认是否存在如以下屏幕截图所示的15次确认。"

#: ../../masternodes/setup.rst:309 ../../masternodes/setup.rst:415
msgid ""
"Trezor blockchain explorer showing 15 confirmations for collateral "
"transfer"
msgstr "Trezor区块链浏览器为保证金转移显示了15次确认"

#: ../../masternodes/setup.rst:312
msgid ""
"While we are waiting for 15 confirmations, download the latest version of"
" the Dash Masternode Tool (DMT) from the GitHub releases page `here "
"<https://github.com/Bertrand256/dash-masternode-tool/releases>`__. Unzip "
"and run the file. The following window appears."
msgstr ""
"在我们等待15次确认时，从GitHub发布\\ `页面 <https://github.com/Bertrand256/dash-"
"masternode-tool/releases>`__\\ 下载达世币主节点工具(DMT)的最新版本。解压并运行该文件。以下窗口将出现。"

#: ../../masternodes/setup.rst:320
msgid "Dash Masternode Tool startup screen"
msgstr "达世币主节点工具启动屏幕"

#: ../../masternodes/setup.rst:322
#, fuzzy
msgid ""
"Click the third button from the left **Check Dash Network Connection** in"
" the top left corner of the main window to verify that the connection is "
"working. Then connect your Trezor device and click the next button **Test"
" Hardware Wallet Connection** to verify the Trezor connection is working."
msgstr ""
"在主窗口的左上角单击\\ **检查RPC连接**\\ ，以验证连接是否正常。然后连接您的Trezor设备，并单击\\ **测试 HW**\\ "
"来验证Trezor连接是否正常。"

#: ../../masternodes/setup.rst:334
msgid "Dash Masternode Tool successful connection confirmations"
msgstr "达世币主节点工具成功连接确认"

#: ../../masternodes/setup.rst:336
msgid ""
"We will now use DMT to extract the transaction ID and legacy masternode "
"key (necessary for successful startup during the DIP003 transition "
"period). Carry out the following sequence of steps as shown in this "
"screenshot:"
msgstr ""

#: ../../masternodes/setup.rst:344
msgid "Dash Masternode Tool configuration steps"
msgstr "达世币工具配置步骤"

#: ../../masternodes/setup.rst:346
msgid "Click the **New** button."
msgstr ""

#: ../../masternodes/setup.rst:347
msgid ""
"Ensure you are on the settings page for a Non-deterministic masternode "
"and click **Generate new** to generate a legacy masternode key. Copy this"
" key into a text editor."
msgstr ""

#: ../../masternodes/setup.rst:350
msgid "Click **Alter configuration to deterministic**"
msgstr ""

#: ../../masternodes/setup.rst:351
msgid ""
"Enter a name for your masternode. The host name you specified for your "
"VPS above is a good choice."
msgstr ""

#: ../../masternodes/setup.rst:353
#, fuzzy
msgid ""
"Enter the IP address of your masternode. This was given to you by the VPS"
" provider when you set up the server."
msgstr "在此处输入您主节点的IP地址。该IP地址是由VPS提供程序在您设置服务器时提供给您的。"

#: ../../masternodes/setup.rst:355
msgid "Enter the TCP port number. This should be 9999."
msgstr "输入TCP端口号。该端口号应该是9999。"

#: ../../masternodes/setup.rst:356
msgid ""
"Click **Locate collateral** to view unused collateral funding "
"transactions available on the connected hardware wallet. The **Collateral"
" address**, **index** and **Collateral TX hash** fields should be filled "
"automatically"
msgstr ""

#: ../../masternodes/setup.rst:364
msgid "Dash Masternode Tool with configuration ready to start masternode"
msgstr "配置就绪的达世币主节点工具可以启动主节点"

#: ../../masternodes/setup.rst:366
#, fuzzy
msgid ""
"Leave DMT open and continue with the next step: :ref:`installing Dash "
"Core on your VPS <masternode-setup-install-dashcore>`."
msgstr ""
"保持DMT打开，记录主节点私钥和保证金地址，然后继续下一步：\\ :ref:`在您的VPS上安装Dash Core钱包 <masternode-"
"setup-install-dashcore>`\\ 。"

#: ../../masternodes/setup.rst:370
msgid "Option 2: Sending from Dash Core wallet"
msgstr "选项2：从Dash Core钱包发送"

#: ../../masternodes/setup.rst:372
msgid ""
"Open Dash Core wallet and wait for it to synchronize with the network. It"
" should look like this when ready:"
msgstr "打开Dash Core钱包，并等待它与网络同步。当Dash Core钱包准备好的时候应该是这样的:"

#: ../../masternodes/setup.rst:378
msgid "Fully synchronized Dash Core wallet"
msgstr "完全同步后的Dash Core钱包"

#: ../../masternodes/setup.rst:380
#, fuzzy
msgid ""
"Click **Tools > Debug console** to open the console. Type the following "
"two commands into the console to generate a legacy masternode key "
"(necessary for successful startup during the DIP003 transition period) "
"and a new Dash address for the collateral::"
msgstr "单击\\ **工具 > 调试控制台**\\ 以打开控制台。在控制台中键入以下两个命令以生成一个主节点密钥，并获得一个新地址::"

#: ../../masternodes/setup.rst:391
#, fuzzy
msgid ""
"Take note of the legacy masternode private key and collateral address, "
"since we will need it later. The next step is to secure your wallet (if "
"you have not already done so). First, encrypt the wallet by selecting "
"**Settings > Encrypt wallet**. You should use a strong, new password that"
" you have never used somewhere else. Take note of your password and store"
" it somewhere safe or you will be permanently locked out of your wallet "
"and lose access to your funds. Next, back up your wallet file by "
"selecting **File > Backup Wallet**. Save the file to a secure location "
"physically separate to your computer, since this will be the only way you"
" can access our funds if anything happens to your computer. For more "
"details on these steps, see :ref:`here <dashcore-backup>`."
msgstr ""
"请记录主节点私钥和保证金地址，因为我们稍后将需要它。下一步是确保您的钱包安全（如果您还没有这样做的话）。首先，通过选择\\ **设置 > "
"加密钱包**\\ "
"来给钱包加密。您应该使用一个您从未在其他地方使用过的强而新的密码。记下您的密码，并把它存放在安全的地方，否则您将永远被锁在您的钱包之外，且无法使用您的资金。接下来，通过选择\\"
" **文件 > 备份钱包**\\ "
"来备份您的钱包文件。将文件保存到物理上独立于计算机的安全位置，因为如果您的电脑出了什么问题，这将是您获得我们资金的唯一途径。有关这些步骤的更多详细信息，请参考\\"
" :ref:`此处 <dashcore-backup>`\\ 。 "

#: ../../masternodes/setup.rst:403
#, fuzzy
msgid ""
"Now send exactly 1000 DASH in a single transaction to the new address you"
" generated in the previous step. This may be sent from another wallet, or"
" from funds already held in your current wallet. Once the transaction is "
"complete, view the transaction in a `blockchain explorer "
"<http://insight.dash.org/insight/>`_ by searching for the address. You "
"will need 15 confirmations before you can start the masternode, but you "
"can continue with the next step at this point already: installing Dash "
"Core on your VPS."
msgstr ""
"现在，将单个交易中的1000个达世币准确地发送到您在上一步中生成的帐户地址中。这1000个达世币可能是从另一个钱包，或是从您当前钱包已持有的资金中发送的。交易完成后，通过搜索地址来查看在\\"
" `区块链浏览器 <http://insight.dash.org/insight/>`_\\ "
"中的交易。在您能够启动主节点之前，您将需要15次确认，但您现在可以继续下一步：在您的VPS上安装Dash Core。"

#: ../../masternodes/setup.rst:422
msgid "Install Dash Core"
msgstr "安装Dash Core"

#: ../../masternodes/setup.rst:424
msgid ""
"Dash Core is the software behind both the Dash Core GUI wallet and Dash "
"masternodes. If not displaying a GUI, it runs as a daemon on your VPS "
"(dashd), controlled by a simple command interface (dash-cli)."
msgstr ""
"Dash Core是Dash Core "
"GUI钱包和达世币主节点工具后的软件。如果不显示GUI，它将在您的VPS上作为守护进程运行(dashd)，由一个简单的命令接口(dash-"
"cli)控制。"

#: ../../masternodes/setup.rst:428
msgid ""
"Open PuTTY or a console again and connect using the username and password"
" you just created for your new, non-root user. There are two options to "
"install Dash Core, an automated option using a script utility called "
"dashman by Dash Core Team member moocowmoo, and a more complicated option"
" which will allow you to understand all of the key steps involved in "
"preparing your masternode."
msgstr ""
"再次打开PuTTY或控制台，并使用您刚刚为您的新的、non-root用户创建的用户名和密码进行连接。有两种选项可以安装Dash "
"Core，一种是使用脚本实用工具的自动选项，它被Dash "
"Core团队成员moocowmoo称为dashman，另一种选项更复杂，该选项将允许您理解在准备您的主节点过程中所涉及的所有关键步骤。"

#: ../../masternodes/setup.rst:436
msgid "Option 1: Automated installation using dashman"
msgstr "选项1：使用dashman自动安装"

#: ../../masternodes/setup.rst:438
msgid ""
"To install Dash using dashman, enter the following commands after logging"
" in::"
msgstr "若要使用dashman安装Dash，请在登录后输入以下命令::"

#: ../../masternodes/setup.rst:447
#, fuzzy
msgid ""
"dashman will download the latest version of Dash Core for your system, as"
" well as an initial snapshot of the blockchain to speed up the "
"bootstrapping process. Next download and install Sentinel, which is "
"required for masternodes at version 0.12.1 or higher::"
msgstr ""
"Dashman将为您的系统下载最新版本的Dash "
"Core，以及区块链的初始情况说明，以加快引导过程。下一次下载并安装sentinel时，需要12.1版本或更高版本的主节点::"

#: ../../masternodes/setup.rst:454
#, fuzzy
msgid ""
"Your system is now running as a standard Dash node, and is busy "
"completing synchronisation with the blockchain. Since dashman does not "
"automatically restart your masternode in the event of a system error, add"
" a check function to crontab to make sure it checks every minute to "
"ensure your masternode is still running::"
msgstr "如果发生系统错误，dashman不会自动重新启动您的主节点。向crontab添加一个检查功能，以确保它每分钟检查一次，从而确保主节点仍在运行::"

#: ../../masternodes/setup.rst:462
msgid ""
"Choose nano as your editor and enter the following line at the end of the"
" file, after the line for sentinel::"
msgstr "选择nano作为编辑器，并在 sentinel行后面的文件末尾输入以下行::"

#: ../../masternodes/setup.rst:467
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. Check the sync status and wait until all blockchain "
"synchronisation and the 15 confirmations for the collateral transaction "
"are complete::"
msgstr ""

#: ../../masternodes/setup.rst:478
msgid "dashman status output showing masternode ready to be started"
msgstr "Dashman状态输出显示即将被启动的主节点"

#: ../../masternodes/setup.rst:480
#, fuzzy
msgid ""
"Continue with the :ref:`next step to register your masternode <register-"
"masternode>`."
msgstr "继续下一步来\\ :ref:`启动您的主节点 <masternode-setup-start>`\\ 。"

#: ../../masternodes/setup.rst:484
msgid "Option 2: Manual installation"
msgstr "选项2：手动安装"

#: ../../masternodes/setup.rst:486
msgid ""
"To manually download and install the components of your Dash masternode, "
"visit the `GitHub releases page "
"<https://github.com/dashpay/dash/releases>`_ and copy the link to the "
"latest ``x86_64-linux-gnu`` version. Go back to your terminal window and "
"enter the following command, pasting in the address to the latest version"
" of Dash Core by right clicking or pressing **Ctrl + V**::"
msgstr ""

#: ../../masternodes/setup.rst:496
#, fuzzy
msgid ""
"Verify the integrity of your download by running the following command "
"and comparing the output against the value for the file as shown in the "
"``SHA256SUMS.asc`` file::"
msgstr "您可以通过运行以下程序，并将输出与如在\\ **Hash文件**\\ 下的Dash网站所示的文件值作比较来选择验证您的下载的完整性::"

#: ../../masternodes/setup.rst:504
msgid ""
"You can also optionally verify the authenticity of your download as an "
"official release by Dash Core Team. All releases of Dash are signed using"
" GPG by UdjinM6 with the key ``8359 2BD1 400D 58D9``, `verifiable here on"
" Keybase <https://keybase.io/udjinm6>`_. Import the key, download the ASC"
" file for the current release of Dash and verify the signature as "
"follows::"
msgstr ""
"您还可以选择验证您的下载作为Dash Core团队发布官方版本的真实性。所有达世币版本的发布都由UdjinM6使用GPG签署，密钥为\\ "
"``8359 2BD1 400D 58D9``\\ ，`可以在这里Keybase <https://keybase.io/udjinm6>`_\\"
" 验证。按如下所示导入密钥，下载达世币当前版本的ASC文件并验证签名::"

#: ../../masternodes/setup.rst:517
msgid "Downloading the PGP key and verifying the signed binary"
msgstr "下载PGP密钥并验证已签名的二进制文件"

#: ../../masternodes/setup.rst:519
#, fuzzy
msgid ""
"Create a working directory for Dash, extract the compressed archive and "
"copy the necessary files to the directory::"
msgstr "为达世币创建一个工作目录，解压压缩的归档文件，将必要的文件复制到目录中，并将它们设置为可执行文件::"

#: ../../masternodes/setup.rst:527
msgid "Create a configuration file using the following command::"
msgstr "使用以下命令创建配置文件::"

#: ../../masternodes/setup.rst:531
msgid ""
"An editor window will appear. We now need to create a configuration file "
"specifying several variables. Copy and paste the following text to get "
"started, then replace the variables specific to your configuration as "
"follows::"
msgstr "一个编辑器窗口将会出现。现在我们需要指定几个变量来创建一个配置文件。复制并粘贴以下文本以开始创建，然后按如下所示替换您配置中的具体变量::"

#: ../../masternodes/setup.rst:551
msgid "Replace the fields marked with ``XXXXXXX`` as follows:"
msgstr "按如下所示替换标记为\\ ``XXXXXXX``\\ 的字段:"

#: ../../masternodes/setup.rst:553
msgid ""
"``rpcuser``: enter any string of numbers or letters, no special "
"characters allowed"
msgstr "``rpcuser``\\ ：输入任何数字或字母字符串，不允许有特殊字符"

#: ../../masternodes/setup.rst:555
msgid ""
"``rpcpassword``: enter any string of numbers or letters, no special "
"characters allowed"
msgstr "``rpcpassword``\\ ：输入任何数字或字母字符串，不允许有特殊字符"

#: ../../masternodes/setup.rst:557
#, fuzzy
msgid ""
"``masternodeprivkey``: this is the legacy masternode private key you "
"generated in the previous step"
msgstr "``masternodeprivkey``\\ ：这是您在上一步中生成的私钥"

#: ../../masternodes/setup.rst:559
msgid "``externalip``: this is the IP address of your VPS"
msgstr "``externalip``\\ ：这是您VPS的IP地址"

#: ../../masternodes/setup.rst:561
msgid "The result should look something like this:"
msgstr "结果应该是这样的:"

#: ../../masternodes/setup.rst:566
msgid "Entering key data in dash.conf on the masternode"
msgstr "在主节点上的dash.conf中输入主要数据"

#: ../../masternodes/setup.rst:568
msgid ""
"Press **Ctrl + X** to close the editor and **Y** and **Enter** save the "
"file. You can now start running Dash on the masternode to begin "
"synchronization with the blockchain::"
msgstr ""
"按\\ **Ctrl + X**\\ 以关闭编辑器，并按\\ **Y**\\ 和\\ **Enter**\\ "
"保存该文件。您现在可以开始在主节点上运行达世币，以便开始与区块链同步::"

#: ../../masternodes/setup.rst:574
msgid ""
"You will see a message reading **Dash Core server starting**. We will now"
" install Sentinel, a piece of software which operates as a watchdog to "
"communicate to the network that your node is working properly::"
msgstr ""
"您将看到一条显示\\ **Dash Core server starting**\\ "
"的消息。我们现在将安装Sentinel，这是一个以看门狗的方式运行的软件，以和网络进行通信，从而说明您的节点正在正常工作::"

#: ../../masternodes/setup.rst:585
msgid ""
"You will see a message reading **dashd not synced with network! Awaiting "
"full sync before running Sentinel.** Add dashd and sentinel to crontab to"
" make sure it runs every minute to check on your masternode::"
msgstr ""
"您将看到一条显示\\ **dashd not synced with network! Awaiting full sync before "
"running Sentinel.**\\ "
"的消息。将dashd和sentinel添加到crontab以确保它每分钟运行一次，来对您的主节点进行检查::"

#: ../../masternodes/setup.rst:591
msgid ""
"Choose nano as your editor and enter the following lines at the end of "
"the file::"
msgstr "选择nano作为您的编辑器，并在文件末尾输入以下行::"

#: ../../masternodes/setup.rst:597
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. We now need to wait for 15 confirmations of the collateral "
"transaction to complete, and wait for the blockchain to finish "
"synchronizing on the masternode. You can use the following commands to "
"monitor progress::"
msgstr ""
"按enter键以确保文件末尾有空行，然后按\\ **Ctrl + X**\\ 关闭编辑器，并按\\ **Y**\\ 和\\ **Enter**\\"
" 保存该文件。现在，我们需要等待要完成的15次保证金交易的确认，并等待区块链在主节点上完成同步。您可以使用以下命令来监测进度::"

#: ../../masternodes/setup.rst:606
msgid "When synchronisation is complete, you should see the following response::"
msgstr "完成同步后，您应该看到以下响应::"

#: ../../masternodes/setup.rst:620
#, fuzzy
msgid ""
"Continue with the next step to construct the ProTx transaction required "
"to enable your masternode."
msgstr "继续下一步来启动您的主节点。"

#: ../../masternodes/setup.rst:627
#, fuzzy
msgid "Register your masternode"
msgstr "启动您的主节点"

#: ../../masternodes/setup.rst:629
msgid ""
"DIP003 introduces several changes to how a masternode is set up and "
"operated. These are described briefly under :ref:`dip3-changes` in this "
"documentation, or in full detail in `DIP003 "
"<https://github.com/dashpay/dips/blob/master/dip-0003.md>`_ itself. It is"
" highly recommended to first read at least the brief documentation before"
" continuing in order to familiarize yourself with the new concepts in "
"DIP003."
msgstr ""

#: ../../masternodes/setup.rst:639
#, fuzzy
msgid "Option 1: Registering from a hardware wallet"
msgstr "选项1：从硬件钱包中启动"

#: ../../masternodes/setup.rst:641
msgid ""
"Go back to DMT and ensure that all fields from the previous step are "
"still filled out correctly.  Click **Generate new** for the three private"
" keys required for a DIP003 deterministic masternode:"
msgstr ""

#: ../../masternodes/setup.rst:645
msgid "Owner private key"
msgstr ""

#: ../../masternodes/setup.rst:646
msgid "Operator private key"
msgstr ""

#: ../../masternodes/setup.rst:647
msgid "Voting private key"
msgstr ""

#: ../../masternodes/setup.rst:652
msgid "Dash Masternode Tool ready to register a new masternode"
msgstr ""

#: ../../masternodes/setup.rst:654
msgid "Then click **Send ProRegTx** and confirm the following two messages:"
msgstr ""

#: ../../masternodes/setup.rst:662
#, fuzzy
msgid "Dash Masternode Tool confirmation dialogs to register a masternode"
msgstr "启动主节点工具确认对话框"

#: ../../masternodes/setup.rst:664
msgid ""
"The BLS secret key must be entered in the ``dash.conf`` file on the "
"masternode. This allows the masternode to watch the blockchain for "
"relevant Pro*Tx transactions, and will cause it to start serving as a "
"masternode when the signed ProRegTx is broadcast by the owner, as we just"
" did above. Edit the configuration file on your masternode as follows::"
msgstr ""

#: ../../masternodes/setup.rst:673 ../../masternodes/setup.rst:761
msgid ""
"The editor appears with the existing masternode configuration. Add this "
"line to the end of the file, replacing the key with your BLS secret key "
"generated above::"
msgstr ""

#: ../../masternodes/setup.rst:679 ../../masternodes/setup.rst:767
msgid ""
"Press enter to make sure there is a blank line at the end of the file, "
"then press **Ctrl + X** to close the editor and **Y** and **Enter** save "
"the file. We now need to restart the masternode for this change to take "
"effect. Enter the following commands, waiting a few seconds in between to"
" give Dash Core time to shut down::"
msgstr ""

#: ../../masternodes/setup.rst:688
#, fuzzy
msgid ""
"At this point you can monitor your masternode using ``dashman/dashman "
"status``, by entering ``~/.dashcore/dash-cli masternode status`` or using"
" the **Get status** function in DMT. The final result should appear as "
"follows:"
msgstr ""
"此时，您可以通过输入\\ ``~/.dashcore/dash-cli masternode status``\\ 使用\\ "
"``dashman/dashman status``\\ ，或者使用DMT中的\\ **获取状态**\\ "
"功能来监测您的主节点。在主节点经过PRE_ENABLED阶段并最终到达 "
"ENABLED阶段，您可能需要等待大约30分钟。一段时间之后，最终结果应显示如下:"

#: ../../masternodes/setup.rst:696
#, fuzzy
msgid "dash-cli masternode status output showing successfully started masternode"
msgstr "dashman状态输出显示成功启动主节点"

#: ../../masternodes/setup.rst:698 ../../masternodes/setup.rst:923
msgid ""
"At this point you can safely log out of your server by typing ``exit``. "
"Congratulations! Your masternode is now running."
msgstr "此时，您可以通过键入\\ ``exit``\\ 来安全地注销您的服务器。祝贺您！您的主节点现在正在运行。"

#: ../../masternodes/setup.rst:705
#, fuzzy
msgid "Option 2: Registering from Dash Core wallet"
msgstr "选项2：从Dash Core钱包启动"

#: ../../masternodes/setup.rst:708
msgid "Identify the funding transaction"
msgstr ""

#: ../../masternodes/setup.rst:710
msgid ""
"If you used an address in Dash Core wallet for your collateral "
"transaction, you now need to find the txid of the transaction. Click "
"**Tools > Debug console** and enter the following command::"
msgstr ""
"如果您使用Dash Core钱包中的地址用于您的保证金交易，现在您则需要找到该交易的txid。单击\\ **工具 > 调试控制台**\\ "
"并输入以下命令::"

#: ../../masternodes/setup.rst:716
msgid "This should return a string of characters similar to this::"
msgstr "这时应该返回类似于以下内容的字符串::"

#: ../../masternodes/setup.rst:722
msgid ""
"The first long string is your transaction hash, while the last number is "
"the index."
msgstr ""

#: ../../masternodes/setup.rst:729
msgid "Generate a BLS key pair"
msgstr ""

#: ../../masternodes/setup.rst:731
msgid ""
"A public/private BLS key pair is required for the operator of the "
"masternode. If you are using a hosting service, they may provide you with"
" their public key, and you can skip this step. If you are hosting your "
"own masternode or have agreed to provide your host with the BLS private "
"key, generate a BLS public/private keypair as follows::"
msgstr ""

#: ../../masternodes/setup.rst:744
msgid ""
"**These keys are NOT stored by the wallet and must be kept secure, "
"similar to the value provided in the past by the** ``masternode genkey`` "
"**command.**"
msgstr ""

#: ../../masternodes/setup.rst:749
msgid "Add the private key to your masternode configuration"
msgstr ""

#: ../../masternodes/setup.rst:751
msgid ""
"The public key will be used in following steps. The private key must be "
"entered in the ``dash.conf`` file on the masternode. This allows the "
"masternode to watch the network for relevant Pro*Tx transactions, and "
"will cause it to start serving as a masternode when the signed ProRegTx "
"is broadcast by the owner (final step below). Log in to your masternode "
"using ``ssh`` or PuTTY and edit the configuration file on your masternode"
" as follows::"
msgstr ""

#: ../../masternodes/setup.rst:776
msgid ""
"We will now prepare the transaction used to register a DIP003 masternode "
"on the network."
msgstr ""

#: ../../masternodes/setup.rst:780
msgid "Prepare a ProRegTx transaction"
msgstr ""

#: ../../masternodes/setup.rst:782
msgid ""
"First, we need to get a new, unused address from the wallet to serve as "
"the owner address. This is different to the collateral address. It must "
"also be used as the voting address if Spork 15 is not yet active. "
"Generate a new address as follows::"
msgstr ""

#: ../../masternodes/setup.rst:791
msgid ""
"Then either generate or choose an existing second address to receive the "
"owner's masternode payouts::"
msgstr ""

#: ../../masternodes/setup.rst:798
msgid ""
"You can also optionally generate and fund a third address to pay the "
"transaction fee. The private key to this address must be available to the"
" wallet submitting the transaction to the network. We will now prepare an"
" unsigned ProRegTx special transaction using the ``protx "
"register_prepare`` command. This command has the following syntax::"
msgstr ""

#: ../../masternodes/setup.rst:807
msgid ""
"Open a text editor such as notepad to prepare this command. Replace each "
"argument to the command as follows:"
msgstr ""

#: ../../masternodes/setup.rst:810
msgid ""
"``collateralHash``: The txid of the 1000 Dash collateral funding "
"transaction"
msgstr ""

#: ../../masternodes/setup.rst:812
msgid "``collateralIndex``: The output index of the 1000 Dash funding transaction"
msgstr ""

#: ../../masternodes/setup.rst:814
msgid ""
"``ipAndPort``: Masternode IP address and port, in the format "
"``x.x.x.x:yyyy``"
msgstr ""

#: ../../masternodes/setup.rst:816
msgid ""
"``ownerKeyAddr``: The new Dash address generated above for the "
"owner/voting address"
msgstr ""

#: ../../masternodes/setup.rst:818
msgid ""
"``operatorPubKey``: The BLS public key generated above (or provided by "
"your hosting service)"
msgstr ""

#: ../../masternodes/setup.rst:820
msgid ""
"``votingKeyAddr``: The new Dash address generated above, or the address "
"of a delegate, used for proposal voting"
msgstr ""

#: ../../masternodes/setup.rst:822
msgid ""
"``operatorReward``: The percentage of the block reward allocated to the "
"operator as payment"
msgstr ""

#: ../../masternodes/setup.rst:824
msgid ""
"``payoutAddress``: A new or existing Dash address to receive the owner's "
"masternode rewards"
msgstr ""

#: ../../masternodes/setup.rst:826
msgid ""
"``feeSourceAddress``: An (optional) address used to fund ProTx fee. "
"``payoutAddress`` will be used if not specified."
msgstr ""

#: ../../masternodes/setup.rst:829
msgid ""
"Note that the operator is responsible for :ref:`specifying their own "
"reward <dip3-update-service>` address in a separate ``update_service`` "
"transaction if you specify a non-zero ``operatorReward``. The owner of "
"the masternode collateral does not specify the operator's payout address."
msgstr ""

#: ../../masternodes/setup.rst:835
msgid "Example (remove line breaks if copying)::"
msgstr ""

#: ../../masternodes/setup.rst:847 ../../masternodes/setup.rst:876
#: ../../masternodes/setup.rst:900
msgid "Output::"
msgstr ""

#: ../../masternodes/setup.rst:855
msgid ""
"Next we will use the ``collateralAddress`` and ``signMessage`` fields to "
"sign the transaction, and the output of the ``tx`` field to submit the "
"transaction."
msgstr ""

#: ../../masternodes/setup.rst:860
msgid "Sign the ProRegTx transaction"
msgstr ""

#: ../../masternodes/setup.rst:862
msgid ""
"We will now sign the content of the ``signMessage`` field using the "
"private key for the collateral address as specified in "
"``collateralAddress``. Note that no internet connection is required for "
"this step, meaning that the wallet can remain disconnected from the "
"internet in cold storage to sign the message. In this example we will "
"again use Dash Core, but it is equally possible to use the signing "
"function of a hardware wallet. The command takes the following syntax::"
msgstr ""

#: ../../masternodes/setup.rst:872 ../../masternodes/setup.rst:896
msgid "Example::"
msgstr ""

#: ../../masternodes/setup.rst:882
msgid "Submit the signed message"
msgstr ""

#: ../../masternodes/setup.rst:884
msgid ""
"We will now submit the ProRegTx special transaction to the blockchain to "
"register the masternode. This command must be sent from a Dash Core "
"wallet holding a balance, since a standard transaction fee is involved. "
"The command takes the following syntax::"
msgstr ""

#: ../../masternodes/setup.rst:891
msgid "Where:"
msgstr ""

#: ../../masternodes/setup.rst:893
msgid ""
"``tx``: The serialized transaction previously returned in the ``tx`` "
"output field from the ``protx register_prepare`` command"
msgstr ""

#: ../../masternodes/setup.rst:894
msgid ""
"``sig``: The message signed with the collateral key from the "
"``signmessage`` command"
msgstr ""

#: ../../masternodes/setup.rst:904
msgid ""
"Your masternode is now registered and will appear on the Deterministic "
"Masternode List after the transaction is mined to a block. You can view "
"this list on the **Masternodes -> DIP3 Masternodes** tab of the Dash Core"
" wallet, or in the console using the command ``protx list valid``, where "
"the txid of the final ``protx register_submit`` transaction identifies "
"your DIP003 masternode. Note again that all functions related to DIP003 "
"will only take effect once Spork 15 is enabled on the network. You can "
"view the spork status using the ``spork active`` command."
msgstr ""

#: ../../masternodes/setup.rst:913
#, fuzzy
msgid ""
"At this point you can go back to your terminal window and monitor your "
"masternode using ``dashman/dashman status``, by entering ``~/.dashcore"
"/dash-cli masternode status`` or using the **Get status** function in "
"DMT. The final result should appear as follows:"
msgstr ""
"此时，您可以返回到您的终端窗口，并通过输入\\ ``~/.dashcore/dash-cli masternode status``\\ 使用\\"
" ``dashman/dashman status``\\ ，或者使用DMT上的\\ **获取状态**\\ "
"功能来监测您的主节点。在节点经过PRE_ENABLED阶段并最终到达ENABLED阶段时，您可能需要等待大约30分钟。一段时间之后，最终的结果应显示如下:"

#: ../../masternodes/setup.rst:921
msgid "dashman status output showing successfully started masternode"
msgstr "dashman状态输出显示成功启动主节点"

#~ msgid ""
#~ "If you prefer to use a masternode"
#~ " hosting service, several community members"
#~ " provide hosting at `masternode.me "
#~ "<https://masternode.me/>`_, `node40.com "
#~ "<https://www.node40.com/hosting/>`_, `dashmasternode.io "
#~ "<http://dashmasternode.io/>`_ or `masternodehosting "
#~ "<https://masternodehosting.com/>`_. When using these"
#~ " hosting services, all you have to"
#~ " do is send a single transaction "
#~ "of 1000 DASH to a specific address"
#~ " and communicate the transaction ID "
#~ "to the hosting service. Simply follow"
#~ " the steps here."
#~ msgstr ""
#~ "如果您更喜欢使用主节点托管服务，则有几个社区成员提供主机服务，地址为\\ `masternode.me "
#~ "<https://masternode.me/>`_\\ 、\\ `node40.com "
#~ "<https://www.node40.com/hosting/>`_\\ 、\\ "
#~ "`dashmasternode.io <http://dashmasternode.io/>`_\\ 或\\ "
#~ "`masternodehosting <https://masternodehosting.com/>`_\\ "
#~ "。当使用这些托管服务时，您所要做的就是发送1000个达世币的单笔交易到一个特定的地址，并将交易ID传递给托管服务。只要按照此处步骤执行就行了。"

#~ msgid ""
#~ "This guide is heavily based on "
#~ "previous guides written by `Bertrand256 "
#~ "<https://github.com/Bertrand256/dash-masternode- "
#~ "tool/blob/master/README.md>`_, `moocowmoo "
#~ "<https://github.com/moocowmoo/dashman/blob/master/README.md>`_, "
#~ "`tao <https://www.dash.org/forum/threads/taos-"
#~ "masternode-setup-guide-for- dummies-"
#~ "updated-for-12-1.2680/>`_, `BolehVPN "
#~ "<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/24019061>`_ "
#~ "and tungfa. Tao's hugely popular "
#~ "original guide and support thread is "
#~ "available `here <https://www.dash.org/forum/threads"
#~ "/taos-masternode- setup-guide-for-"
#~ "dummies-updated-for-12-1.2680/>`__, as well "
#~ "many more guides for specific cases "
#~ "in this forum."
#~ msgstr ""
#~ "本指南主要以\\ `Bertrand256 <https://github.com/Bertrand256"
#~ "/dash-masternode- tool/blob/master/README.md>`_\\ 、\\"
#~ " `moocowmoo "
#~ "<https://github.com/moocowmoo/dashman/blob/master/README.md>`_\\ "
#~ "、\\ `tao <https://www.dash.org/forum/threads/taos-"
#~ "masternode-setup-guide-for- dummies-"
#~ "updated-for-12-1.2680/>`_\\ 、\\ `BolehVPN "
#~ "<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/24019061>`_\\ "
#~ "和Tungfa先前编写的指南为基础。Tao的非常受欢迎的原创指南和支持线程可在\\ `此处 "
#~ "<https://www.dash.org/forum/threads/taos-masternode- "
#~ "setup-guide-for-dummies-updated-"
#~ "for-12-1.2680/>`__\\ 浏览，在论坛中还有关于更多具体案例的指南。"

#~ msgid ""
#~ "This guide assumes you are setting "
#~ "up a single masternode for the "
#~ "first time. If you are updating a"
#~ " masternode, see :ref:`here <masternode-"
#~ "update>` instead. You will need:"
#~ msgstr ""
#~ "本指南是假设您第一次设置单个主节点。如果您想要更新主节点，请参阅\\ :ref:`此处 "
#~ "<masternode-update>`\\ 。您将需要："

#~ msgid ""
#~ "We also assume you will be working"
#~ " from a Windows computer. However, "
#~ "since most of the work is done "
#~ "on your Linux VPS, alternative steps "
#~ "for using macOS or Linux will be"
#~ " indicated where necessary."
#~ msgstr ""
#~ "我们还假设您将在Windows系统上工作。但是，由于大部分工作都会在Linux "
#~ "VPS上完成，因此将在必要时说明使用MacOS或Linux的其他步骤。"

#~ msgid ""
#~ "Select Ubuntu 16.04 x64 as the "
#~ "server type. We use 16.04 instead "
#~ "of the latest version because 16.04 "
#~ "is an LTS release of Ubuntu, which"
#~ " will be supported with security "
#~ "updates for 5 years instead of the"
#~ " usual 9 months."
#~ msgstr "选择Ubuntu16.04x64作为服务器类型。我们使用的是16.04而不是最新版本，因为16.04是Ubuntu的LTS版本，它将支持5年的安全更新，而不是通常的9个月。"

#~ msgid ""
#~ "A Dash address with a single "
#~ "unspent transaction output (UTXO) of "
#~ "exactly 1000 DASH is required to "
#~ "operate a masternode. Once it has "
#~ "been sent, various keys regarding the"
#~ " transaction must be extracted for "
#~ "later entry in a configuration file "
#~ "as proof that the transaction was "
#~ "completed successfully. A masternode can "
#~ "be started from a hardware wallet "
#~ "or the official Dash Core wallet, "
#~ "although a hardware wallet is highly "
#~ "recommended to enhance security and "
#~ "protect yourself against hacking. This "
#~ "guide will describe the steps for "
#~ "both hardware wallets and Dash Core."
#~ msgstr ""
#~ "要操作一个主节点，需要一个带有单个未花费的交易输出(UTXO)为1000个达世币的钱包地址。一旦交易被发送，必须提取有关交易的各种密钥，以便稍后在配置文件中输入，来证明交易已经被成功完成。一个主节点可以从硬件钱包或官方的Dash"
#~ " Core钱包开始，尽管强烈推荐使用硬件钱包来增强安全性和保护自己免受黑客攻击。该指南将描述硬件钱包和Dash "
#~ "Core钱包的步骤。"

#~ msgid ""
#~ "We will now use DMT to extract "
#~ "the transaction ID. Carry out the "
#~ "following sequence of steps as shown "
#~ "in this screenshot from DMT developer"
#~ " Bertrand256:"
#~ msgstr "现在我们将使用DMT提取交易ID。按DMT开发人员Bertrand 256的屏幕截图所示执行以下步骤顺序："

#~ msgid ""
#~ "Enter the name of your masternode "
#~ "here. This should match the hostname "
#~ "as defined when setting up your "
#~ "server, dashmn1 in this case. You "
#~ "can view this in the first line"
#~ " of the output of dashman/dashman "
#~ "status."
#~ msgstr "在此处输入您的主节点名称。在本例中，该名称应该与您设置服务器dashmn1时定义的主机名相匹配。您可以在dashman/dashman状态输出的第一行中查看这该名称。"

#~ msgid "Click Generate new to generate a new masternode private key."
#~ msgstr "单击Generate new以生成新的主节点私钥。"

#~ msgid ""
#~ "Copy the collateral address where you"
#~ " sent the 1000 DASH collateral from"
#~ " your Trezor Wallet and paste it "
#~ "in this field."
#~ msgstr "复制您从Trezor钱包发送1000个达世币的钱包地址，并将其粘贴到此字段中。"

#~ msgid ""
#~ "Click the arrow → to derive the"
#~ " BIP32 path from your collateral "
#~ "address. You can verify this against "
#~ "the BIP32 path shown on the "
#~ "receive tab in your Trezor Wallet "
#~ "for the transaction."
#~ msgstr "单击箭头 → 以从您的保证金地址派生BIP32路径。您可以通过您Trezor钱包的接收选项卡中显示的BIP 32路径来验证这一点，以获取交易。"

#~ msgid ""
#~ "Click Lookup to find the collateral "
#~ "TX ID for the transaction which "
#~ "transferred the collateral to the "
#~ "address. You can verify this against "
#~ "the TX ID shown on the "
#~ "confirmation page of the blockchain "
#~ "explorer for your collateral address."
#~ msgstr ""
#~ "单击查找以找到交易的保证金交易 ID，也就是存有保证金的钱包地址。您可以根据区块链浏览器的确认页面上显示的交易 "
#~ "ID来验证这一点，以获取您的保证金地址。"

#~ msgid "Generating a masternode private key in Dash Core wallet"
#~ msgstr "在Dash Core钱包中生成主节点私钥"

#~ msgid ""
#~ "Your system is now running as a"
#~ " standard Dash node, and is busy "
#~ "completing synchronisation with the "
#~ "blockchain. We now need to enter "
#~ "the masternode private key generated in"
#~ " the previous step. Edit the "
#~ "configuration file using the following "
#~ "command::"
#~ msgstr "您的系统现在正在作为标准主节点节点运行，并且正忙于完成与区块链的同步。我们现在需要输入在上一步中生成的主节点私钥。使用以下命令编辑配置文件::"

#~ msgid ""
#~ "Uncomment the last two lines by "
#~ "deleting the # symbol at the start"
#~ " of the line, then paste the "
#~ "masternode private key you generated "
#~ "after ``masternodeprivkey=``. You can simply"
#~ " click the right mouse button to "
#~ "paste into the terminal window. Press"
#~ " **Ctrl + X** to close the "
#~ "editor and **Y** and **Enter** save "
#~ "the file."
#~ msgstr ""
#~ "删除行首的 # 符号，取消对最后两行的注释，然后粘贴您在\\ "
#~ "``masternodeprivkey=``\\ 之后生成的主节点私钥。您只需单击鼠标右键将其粘贴到终端窗口即可。按\\ "
#~ "**Ctrl + X**\\ 来关闭编辑器，并按\\ **Y**\\ 和\\"
#~ " **Enter**\\ 保存文件。"

#~ msgid "Entering masternodeprivkey in dash.conf on the masternode"
#~ msgstr "在主节点的dash.conf 中输入masternodeprivkey"

#~ msgid ""
#~ "At this point you should restart "
#~ "dashd to load the new configuration "
#~ "file by typing the following::"
#~ msgstr "此时，您应该重新启动dashd，通过键入以下命令加载新的配置文件::"

#~ msgid ""
#~ "Press **Y** and **Enter** to confirm."
#~ " Then check the sync status and "
#~ "wait until all blockchain synchronisation "
#~ "and the 15 confirmations for the "
#~ "collateral transaction are complete::"
#~ msgstr "按\\ **Y**\\ 和\\ **Enter**\\ 以确认。然后检查同步状态并等待，直到完成所有区块链同步和保证金交易的15次确认为止::"

#~ msgid ""
#~ "Press enter to make sure there is"
#~ " a blank line at the end of "
#~ "the file, then press **Ctrl + X**"
#~ " to close the editor and **Y** "
#~ "and **Enter** save the file."
#~ msgstr ""
#~ "按Enter键以确保文件末尾有空行，然后按\\ **Ctrl + X**\\ "
#~ "来关闭编辑器，并按\\ **Y**\\ 和\\ **Enter**\\ 保存该文件。"

#~ msgid ""
#~ "To manually download and install the "
#~ "components of your Dash masternode, "
#~ "visit https://www.dash.org/wallets on your "
#~ "computer to find the link to the"
#~ " latest Dash Core wallet. Click "
#~ "**Linux**, then right-click on "
#~ "**Download TGZ** for **Dash Core Linux"
#~ " 64 Bit** and select **Copy link "
#~ "address**. Go back to your terminal "
#~ "window and enter the following command,"
#~ " pasting in the address to the "
#~ "latest version of Dash Core by "
#~ "right clicking or pressing **Ctrl + "
#~ "V**::"
#~ msgstr ""
#~ "要手动下载和安装您的主节点组件，请在您的计算机上访问\\ https://www.dash.org/wallets "
#~ "\\ ，以查找到最新版本Dash Core钱包的链接。单击\\ **Linux**\\ "
#~ "，然后右键单击\\ **Dash Core Linux 64 Bit**\\"
#~ " 中的\\ **下载TGZ**\\ ，并选择\\ **复制链接地址**\\ "
#~ "。返回到您的终端窗口并输入以下命令，右键单击或按\\ **Ctrl + V**\\ "
#~ "将地址粘贴到最新版本的Dash Core上::"

#~ msgid "Link to the hash file to verify download integrity"
#~ msgstr "链接到Hash文件以验证下载完整性"

#~ msgid "Clean up unneeded files::"
#~ msgstr "清理不需要的文件::"

#~ msgid ""
#~ "Depending on how you sent your "
#~ "masternode collateral, you will need to"
#~ " start your masternode with a command"
#~ " sent either by your hardware wallet"
#~ " or by Dash Core wallet. Before "
#~ "you continue, you must ensure that "
#~ "your 1000 DASH collateral transaction "
#~ "has at least 15 confirmation, and "
#~ "that dashd is running and fully "
#~ "synchronized with the blockchain on your"
#~ " masternode. See the previous step "
#~ "for details on how to do this. "
#~ "During the startup process, your "
#~ "masternode may pass through the "
#~ "following states:"
#~ msgstr ""
#~ "根据您发送主节点保证金的方式，您需要使用由您的硬件钱包或Dash "
#~ "Core钱包发送的命令来启动您的主节点。在您继续之前，您必须确保您的1000个达世币交易至少有15次确认，并且该dashd正在运行，并与您的主节点上的区块链完全同步。有关此步骤的详细信息，请参阅上一步。在启动主节点过程中，您的主节点可能经过以下状态:"

#~ msgid ""
#~ "MASTERNODE_SYNC: This indicates the data "
#~ "currently being synchronised in the "
#~ "masternode"
#~ msgstr "MASTERNODE_SYNC: 这表示当前正在主节点中被同步的数据"

#~ msgid ""
#~ "MASTERNODE_SYNC_FAILED: Synchronisation could not"
#~ " complete, check your firewall and "
#~ "restart dashd"
#~ msgstr "MASTERNODE_SYNC_FAILED: 同步无法完成，请检查您的防火墙并重新启动dashd"

#~ msgid ""
#~ "WATCHDOG_EXPIRED: Waiting for sentinel to "
#~ "restart, make sure it is entered "
#~ "in crontab"
#~ msgstr "WATCHDOG_EXPIRED: 等待sentinel重新启动，确保它被输入到crontab中。"

#~ msgid "NEW_START_REQUIRED: Start command must be sent from wallet"
#~ msgstr "NEW_START_REQUIRED: 启动命令必须从钱包中发送"

#~ msgid "PRE_ENABLED: Waiting for network to recognize started masternode"
#~ msgstr "PRE_ENABLED: 等待网络识别已启动的主节点"

#~ msgid "ENABLED: Masternode successfully started"
#~ msgstr "ENABLED: 成功启动主节点"

#~ msgid ""
#~ "If you masternode does not seem to"
#~ " start immediately, do not arbitrarily "
#~ "issue more start commands. Each time "
#~ "you do so, you will reset your "
#~ "position in the payment queue."
#~ msgstr "如果您的主节点似乎没有立即启动，不要任意地发出更多的启动命令。因为每次这样做时，您将重置您在支付队列中的位置。"

#~ msgid ""
#~ "Go back to DMT and ensure that "
#~ "all fields are filled out correctly. "
#~ "Click **Lookup** to find the collateral"
#~ " TX ID for the transaction which "
#~ "transferred the collateral to the "
#~ "address if you were not able to"
#~ " do so earlier. Then click **Start"
#~ " Masternode using Hardware Wallet** and "
#~ "confirm the following two messages:"
#~ msgstr ""
#~ "返回DMT并确保所有字段都被正确填写。如果您之前没有能找到保证金交易ID，此时单击\\ **查找**\\ "
#~ "以找到转移保证金到入账地址的交易ID。然后单击\\ **使用硬件钱包启动主节点**\\ ，并确认以下两条消息:"

#~ msgid ""
#~ "The first long string is your "
#~ "transaction hash, while the last number"
#~ " is the index. We now need to"
#~ " create a file called *masternode.conf* "
#~ "for this wallet in order to be "
#~ "able to use it to issue the "
#~ "command to start your masternode on "
#~ "the network. Open a new text file"
#~ " in Notepad (or TextEdit on macOS,"
#~ " gedit on Linux) and enter the "
#~ "following information:"
#~ msgstr ""
#~ "第一个长字符串是您的交易hash，而最后一个数字是索引。我们现在需要为这个钱包创建一个名为\\ "
#~ "*masternode.conf*\\ "
#~ "的文件，以便能够使用它发出命令，从而启动您在网络上的主节点。在记事本（或macOS上的TextEdit，Linux上的gedit）中打开一个新的文本文件，并输入以下信息:"

#~ msgid "**Label**: Any single word used to identify your masternode, e.g. MN1"
#~ msgstr "**标签**\\ ：用于识别您的主节点的任何单个单词，例如，MN1"

#~ msgid ""
#~ "**IP and port**: The IP address "
#~ "and port (usually 9999) configured in"
#~ " the dash.conf file, separated by a"
#~ " colon (:)"
#~ msgstr "**IP和端口**\\ ：在dash.conf文件中的IP地址和端口（通常为9999），由冒号（:）分隔"

#~ msgid ""
#~ "**Masternode private key**: This is the"
#~ " result of your ``masternode genkey`` "
#~ "command earlier, also the same as "
#~ "configured in the dash.conf file"
#~ msgstr "**主节点私钥**\\ ：这是之前\\ ``masternode genkey``\\ 命令的结果，也是在dash.conf配置的内容"

#~ msgid ""
#~ "**Transaction hash**: The txid we just"
#~ " identified using ``masternode outputs``"
#~ msgstr "**交易hash**\\ ：我们刚才使用\\ ``masternode outputs``\\ 标识的txid"

#~ msgid "**Index**: The index we just identified using ``masternode outputs``"
#~ msgstr "**索引**\\ ：我们刚才使用\\ ``masternode outputs``\\ 标识的索引"

#~ msgid ""
#~ "Enter all of this information on a"
#~ " single line with each item separated"
#~ " by a space, for example::"
#~ msgstr "在单行中输入这些信息的所有内容，每个条目用空格分隔，例如::"

#~ msgid ""
#~ "Save this file in the **DashCore** "
#~ "data folder on the PC running the"
#~ " Dash Core wallet using the filename"
#~ " *masternode.conf*. You may need to "
#~ "enable **View hidden items** to view "
#~ "this folder. Be sure to select "
#~ "**All files** if using Notepad so "
#~ "you don't end up with a "
#~ "*.conf.txt* file extension by mistake. "
#~ "For different operating systems, the "
#~ "DashCore folder can be found in "
#~ "the following locations (copy and paste"
#~ " the shortcut text into the **Save**"
#~ " dialog to find it quickly):"
#~ msgstr ""
#~ "将此文件保存在PC上的\\ **Dash Core**\\ 数据文件夹中，使用文件名\\ "
#~ "*masternode.conf*\\ ，运行Dash Core钱包。您可能需要启用 **查看隐藏项**"
#~ " 来查看此文件夹。如果使用记事本，请确保选择\\ **所有文件**\\ ，这样就不会出现\\ "
#~ "*.conf.txt*\\ "
#~ "文件扩展名错误。对于不同的操作系统，可以在以下位置找到DashCore文件夹（复制并粘贴快捷文本到\\ **保存**\\ "
#~ "对话框以快速找到Dash Core文件夹）:"

#~ msgid "Platform"
#~ msgstr "平台"

#~ msgid "Path"
#~ msgstr "路径"

#~ msgid "Shortcut"
#~ msgstr "快捷方式"

#~ msgid "Linux"
#~ msgstr "Linux"

#~ msgid "``/home/yourusername/.dashcore``"
#~ msgstr "``/home/yourusername/.dashcore``"

#~ msgid "``~/.dashcore``"
#~ msgstr "``~/.dashcore``"

#~ msgid "macOS"
#~ msgstr "macOS"

#~ msgid "``/Macintosh HD/Library/Application Support``"
#~ msgstr "``/Macintosh HD/Library/Application Support``"

#~ msgid "``~/Library/Application Support/DashCore``"
#~ msgstr "``~/Library/Application Support/DashCore``"

#~ msgid "Windows"
#~ msgstr "Windows"

#~ msgid "``C:\\Users\\yourusername\\AppData\\Roaming\\Dash Core``"
#~ msgstr "``C:\\Users\\yourusername\\AppData\\Roaming\\Dash Core``"

#~ msgid "``%APPDATA%\\DashCore``"
#~ msgstr "``%APPDATA%\\DashCore``"

#~ msgid ""
#~ "Now close your text editor and "
#~ "also shut down and restart Dash "
#~ "Core wallet. Dash Core will recognize"
#~ " masternode.conf during startup, and is "
#~ "now ready to activate your masternode."
#~ " Go to **Settings > Unlock Wallet**"
#~ " and enter your wallet passphrase. "
#~ "Then click **Tools > Debug console** "
#~ "again and enter the following command"
#~ " to start your masternode (replace "
#~ "MN1 with the label for your "
#~ "masternode)::"
#~ msgstr ""
#~ "现在关闭您的文本编辑器，而且关闭并重新启动Dash Core钱包。Dash "
#~ "Core将在启动过程中识别masternode.conf，并在此时准备激活您的主节点。转到\\ **设置 > "
#~ "解锁钱包**\\ 并输入您的钱包密码。然后再次单击\\ **工具 > 调试控制台**\\"
#~ " ，并输入以下命令来启动您的主节点(用您的主节点的标签替换MN1)::"

